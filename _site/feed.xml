<?xml version="1.0" encoding="UTF-8"?> <rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"> <channel><title>游戏暂停</title><description>李家伟的博客。</description><link>http://localhost:4000</link><atom:link href="http://localhost:4000/feed.xml" rel="self" type="application/rss+xml" /> <item><title>信息社会的垄断</title><description>&lt;p&gt;&lt;a href=&quot;https://www.zhihu.com/question/40863622/answer/341656985&quot;&gt;这篇回答&lt;/a&gt;显然无知，无知在于看不到信息社会的垄断。在信息社会，垄断是 “lock in”，可以理解为绑架，你很难迁移到别的替代品上。RSS、电子邮件、互联网是开放标准，对应的客户端是商品，你可以随意迁移客户端，因此这些客户端有竞争关系，消费者终将受益。&lt;/p&gt; &lt;p&gt;如果你被 “lock in” 了，产品做得多屎多贵，你还是会被当韭菜割。比如游戏主机，因为买了游戏光盘，你很难迁移到别的主机平台上，不过至少游戏主机市场还是个寡头垄断（oligoplay）。像微信和脸书，根本不存在可迁移的替代品，账号封闭、内容封闭、客户端封闭，产品做得再屎你还是要买单，早日逃离才是正确的选择。&lt;/p&gt; </description><pubDate>Thu, 15 Mar 2018 19:00:00 +0000</pubDate><link>http://localhost:4000/posts/monoplay/</link><guid isPermaLink="true">http://localhost:4000/posts/monoplay/</guid> </item> <item><title>回到未来</title><description>&lt;p&gt;&lt;a href=&quot;https://www.economist.com/news/china/21737543-unhappiness-china-palpable-xi-jinping-decides-abolish-presidential-term-limits&quot;&gt;《经济学人》&lt;/a&gt;认为，任期限制取消显示了邓小平设计的「集体领导」失败。「法制」改「法治」、人民检察委员会让法院、政府和党的关系更紧合，权力分割不再存在。习想留任有三个可能原因：国家主席的身份，相比隐于幕后，在国际政治上更有分量；防止对手反击；“It is even possible that” 稳定的政局可以解决国家经济的顽疾。&lt;/p&gt; &lt;p&gt;我的想法？谢天谢地薄熙来策反失败，不然我们已经回到毛泽东、斯大林的时代，哪有现在这么多的移民机会。&lt;/p&gt; </description><pubDate>Wed, 07 Mar 2018 18:00:00 +0000</pubDate><link>http://localhost:4000/posts/term-limit/</link><guid isPermaLink="true">http://localhost:4000/posts/term-limit/</guid> </item> <item><title>流行文化</title><description>&lt;p&gt;如果一个人支持男女平权、同时 ta 还喜欢性别歧视色彩浓重的 Trap 音乐，这两者矛盾吗？我认为不矛盾，类似例子还有不认同同性恋的腐女、权利被践踏却仍然高举民族主义大旗的爱国者。&lt;/p&gt; &lt;p&gt;既然一个人不会有非黑即白的价值观，那到底是什么在影响着我们？我认为流行文化可能扮演重要角色（亦或者说是意识形态），影响我们的也许不是一段逻辑自洽合理的辩论，而是流行文化。现在想来，《摩登家庭》、《Where the Bears Are》对我的性取向认同的影响可能远大于李银河的《同性恋亚文化》，我对于约会的看法和《老友记》如出一辙，摇滚音乐对于我的自由派观点的塑造应该比《南方周末》大一点。再往回看，《法国大革命前的畅销禁书》讲的也是流行文化。&lt;/p&gt; &lt;p&gt;把男女平权、LGBT 平权、Trap 音乐、腐文化、民族主义、民主运动当成流行文化来理解，它们都是你愿意效忠跟随一生的北伦敦球队，此时此刻，loyalty 大于一切。&lt;/p&gt; </description><pubDate>Sat, 03 Mar 2018 00:00:00 +0000</pubDate><link>http://localhost:4000/posts/pop-culture/</link><guid isPermaLink="true">http://localhost:4000/posts/pop-culture/</guid> </item> <item><title>后现代性</title><description>&lt;p&gt;今天心血来潮研究了一下后现代性。如果我没搞错的话，后现代是理性主义的对立面，起源于康德的纯粹理性批判，即我们的理性限于经验。之后有福柯，他认为癫狂不应该被医院（权力）压迫。癫狂本应该是一种自然状态，然而权力用知识（理性）合理化其压迫。在当今这就是生育政策、同性恋、网瘾和知识的关系。&lt;/p&gt; &lt;p&gt;福柯认为知识和权力是硬币的两面，具有知识的人掌握了权力（你的医生、老师、议员、上司），而权力又让他们可以定义知识，什么是对的、什么错的，权力创造了监视，你的父母、老师、政府、摄像头、大数据、人工智能，即便他们不在场，只要你「以为」监视存在，权力的目的就达到了，因此你被权力规训，也因此根本没有「自由主义」。&lt;/p&gt; &lt;p&gt;虽然我是社会学和哲学的门外汉，但福柯的思想让我很受启发。比如计划生育，支持方认为计划生育是为了国家富强家庭和睦，因为深奥的理论和模型告诉我们，计划生育刻不容缓。再比如征税，同样是政府用知识合理化暴力征税，我个人觉得最讽刺的是烟草税，烟草税为什么高？根本不是政府做好事让你少吸烟，而是吸烟作为成瘾物，价格再高，吸烟者还是会买，政府可以从中获得大量税收而不损失名声，当然啦，政府会用吸烟有害健康为自己背书，福利经济学把这合理化为不影响社会整体福利，知识合理化了权力。&lt;/p&gt; &lt;p&gt;福柯是法国人，啊，看看巴黎混乱的街头以及我在巴黎被抢的钱包，法国人能有如此感性的思想真的毫不奇怪。粗浅地看，我认为后现代性是我们认识世界的一种方式，我们不可能放弃理性和逻辑，但后现代性是对理性至上态度的警告。不负责任地说，正因为我们逻辑的不自洽和不理性，才让这个社会充满「乐趣」。&lt;/p&gt; </description><pubDate>Sat, 03 Mar 2018 00:00:00 +0000</pubDate><link>http://localhost:4000/posts/post-modern/</link><guid isPermaLink="true">http://localhost:4000/posts/post-modern/</guid> </item> <item><title>美国经济豪赌</title><description>&lt;p&gt;本周的&lt;a href=&quot;https://www.economist.com/news/leaders/21736513-fiscal-policy-adding-demand-even-economy-running-hot-americas-extraordinary&quot;&gt;《经济学人》&lt;/a&gt;封面文章是美国经济豪赌。最没有经验的白宫和联储把应对经济危机的刺激政策（减税）用在经济平缓时期，债台高筑、风险难以预测也不惜。2 月的数据显示，美国取得了 09 年以来最快的工资增长，股市随之飙升。一方面，《经济学人》认为这场豪赌过于鲁莽和庞大，希望联储能保持头脑清醒；另一方面，《经济学人》相信这场政策也有合理之处，低失业率不会带来太严重的通胀，美国经济仍然会保持增长。因为工资增长会让更多（不打算工作的）美国人选择工作，劳动市场需求增加利及底层人口（川普的基本盘）。高债务是不知何时会引爆的炸弹，但对于过去十年来工资增长缓慢的工人来讲，这场豪赌或许值得一试。&lt;/p&gt; </description><pubDate>Sat, 10 Feb 2018 00:00:00 +0000</pubDate><link>http://localhost:4000/posts/us-gamble/</link><guid isPermaLink="true">http://localhost:4000/posts/us-gamble/</guid> </item> <item><title>拖延症的任务管理</title><description>&lt;p&gt;作为重度拖延症患者，我对于任务管理有极大的阴影：如果一件事情被计划，那就永远不可能做。后来看了些认知心理学的资料，里面提到计划造成了压力让人拖延，应该把任务视为过程而不是结果，比如「查找论文资料」就是个结果，但「花 1 小时搜集论文资料」就是过程… 后者给你的压力更小所以更容易完成。我看完觉得很有道理‬，然后用番茄钟 pomotodo 做计划，有用是有用，但也造成了干扰。每次定计划都要计算要做几个番茄钟，通常预估得偏差很大，更重要的是番茄钟经常在我思如泉涌的时候打断我。&lt;/p&gt; &lt;p&gt;番茄钟适合没意思的事情或者注意力严重缺陷的人，因为你只需要熬过 25 分钟不会造成太大负担，这 25 分钟还让你把事情做完了。&lt;/p&gt; &lt;p&gt;我的大部分任务都不是上述两种情况之一。对于无聊的事情：我的字典里不存在「忍耐做无聊的事情」，无聊的事情，比如复习功课，干嘛要做？目前碰到的最大困难就是申请签证了，每次都是最后一天死线递签。有些事情即便看起来很无聊，我也可以让它变得有意思，比如复习功课，我喜欢从零开始写笔记或者从研究一个问题开始，类似费曼学习法，但是用写的。我注意力通常不错，除了欧洲旅游回来的那段时间找不到状态，大部分情况还好。&lt;/p&gt; &lt;p&gt;我这几天逐渐摸索出新的任务管理方式，就是依旧老样子做计划，但任务只要&lt;strong&gt;开始&lt;/strong&gt;做，不管是做了 5 分钟还是 5 小时，只要开始做了就可以打勾，一是不会有什么压力，不会拖延，另一个好处是把时间用在我真正能集中精力的地方。&lt;/p&gt; &lt;p&gt;如果传统任务管理是计划经济，这种管理方式就是市场经济了吧！:laughing:&lt;/p&gt; </description><pubDate>Sat, 10 Feb 2018 00:00:00 +0000</pubDate><link>http://localhost:4000/posts/time-management/</link><guid isPermaLink="true">http://localhost:4000/posts/time-management/</guid> </item> <item><title>数字驯服机器</title><description>&lt;p&gt;经济增长当然是好的，但经济增长这个概念太容易被操控。统计局跟你讲中国本季度 GDP 增长 7.1%，有什么意义呢？如果经济增长只惠及精英，然后精英们跟你讲我们的 GDP 世界第二唉，有什么意义呢？不过是民族主义的又一个驯服工具罢了。&lt;/p&gt; </description><pubDate>Sat, 10 Feb 2018 00:00:00 +0000</pubDate><link>http://localhost:4000/posts/growth/</link><guid isPermaLink="true">http://localhost:4000/posts/growth/</guid> </item> <item><title>用数据讲故事</title><description>&lt;ul id=&quot;markdown-toc&quot;&gt; &lt;li&gt;&lt;a href=&quot;#确定目标和观众&quot; id=&quot;markdown-toc-确定目标和观众&quot;&gt;确定目标和观众&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;#不要让观众思考&quot; id=&quot;markdown-toc-不要让观众思考&quot;&gt;不要让观众思考&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;#出乎意料的洞察&quot; id=&quot;markdown-toc-出乎意料的洞察&quot;&gt;出乎意料的洞察&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;#包装&quot; id=&quot;markdown-toc-包装&quot;&gt;包装&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;#可视化设计&quot; id=&quot;markdown-toc-可视化设计&quot;&gt;可视化设计&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;#深入阅读&quot; id=&quot;markdown-toc-深入阅读&quot;&gt;深入阅读&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;#作业&quot; id=&quot;markdown-toc-作业&quot;&gt;作业&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;#致谢&quot; id=&quot;markdown-toc-致谢&quot;&gt;致谢&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;本笔记是&lt;a href=&quot;https://github.com/iewaij/introDataScience&quot;&gt;数据科学导论系列&lt;/a&gt;的第三篇，Markdown 文件开源于 &lt;a href=&quot;https://github.com/iewaij/introDataScience/blob/master/Story%20Telling.md&quot;&gt;GitHub&lt;/a&gt;。&lt;/p&gt; &lt;p&gt;人类喜欢听故事，这个道理不仅适用于小孩，也适用于成年人。在数据可视化层面，能用数据讲故事这点非常重要，故事可以帮助你牢牢地抓住观众的注意力以达到你的目标。&lt;/p&gt; &lt;p&gt;比较笼统地讲，故事一般有下面这四个结构：&lt;/p&gt; &lt;ol&gt; &lt;li&gt;人物出场（介绍有趣的发现）：很久很久以前，公主来到了一个村庄；&lt;/li&gt; &lt;li&gt;遇到矛盾（你的发现遇到困境、矛盾）：公主被妖怪掳走了；&lt;/li&gt; &lt;li&gt;解决矛盾（困境的解决、结论）：王子杀死了妖怪，解救了公主；&lt;/li&gt; &lt;li&gt;保留想象空间（研究的局限性和未来工作）：最后王子和公主幸福地生活在一起。&lt;/li&gt; &lt;/ol&gt; &lt;p&gt;好的数据故事精确对应目标观众、打动人心、解答问题、精心设计并让我们愿意做出改变，本篇笔记将说明如何用数据讲好故事。&lt;/p&gt; &lt;h2 id=&quot;确定目标和观众&quot;&gt;确定目标和观众&lt;/h2&gt; &lt;p&gt;在开始准备你的数据故事前，有两个关键问题需要明确：&lt;strong&gt;你的目标是什么？你的观众是谁？&lt;/strong&gt;&lt;/p&gt; &lt;p&gt;确定你的目标。你的数据是要预测未来？还是理解当下的现象？检验你的假设？呼吁观众行动？&lt;/p&gt; &lt;p&gt;了解你的观众。你的观众是谁？观众有多少知识储备？他们听你演讲的动机是什么？他们想要什么？你的哪些目标和观众是一致的？你有哪些洞察可以分享给观众？&lt;/p&gt; &lt;h2 id=&quot;不要让观众思考&quot;&gt;不要让观众思考&lt;/h2&gt; &lt;p&gt;你的观众通常和你没有啥利益关系，也没有你的经历和体会，所以观众也懒得为了你的作品动脑子。所以切记这几个要点：&lt;/p&gt; &lt;ol&gt; &lt;li&gt;用顺畅的逻辑贯穿你的故事；&lt;/li&gt; &lt;li&gt;到了重要步骤提醒观众，注意，我们讲到这里了，现在开始下一部分；&lt;/li&gt; &lt;li&gt;有趣的洞察要强调、划重点！&lt;/li&gt; &lt;li&gt;图表的标题一定要&lt;strong&gt;大&lt;/strong&gt;、&lt;strong&gt;显眼&lt;/strong&gt;、体现主要信息。&lt;/li&gt; &lt;/ol&gt; &lt;h2 id=&quot;出乎意料的洞察&quot;&gt;出乎意料的洞察&lt;/h2&gt; &lt;p&gt;用出于意料的洞察来抓住观众的注意力，「你可能觉得杜蕾斯是最好用的，但我们的数据发现冈本才是」。当意识到自己不知道某些事情后，观众的好奇心就被勾起，帮助你不尴尬地讲完故事。&lt;/p&gt; &lt;h2 id=&quot;包装&quot;&gt;包装&lt;/h2&gt; &lt;p&gt;包装（包括设计、颜色、声音）像雕虫小技，但能帮助你引导观众。例如下面这张对伊战伤亡人数的统计，作者巧妙地把柱状图翻转并且使用鲜红色，使得图表像滴落的血迹，传达了作者的反战情绪，也引导观众思考士兵的生命。&lt;/p&gt; &lt;p&gt;&lt;img src=&quot;https://i.loli.net/2017/08/17/5995a56a73004.jpg&quot; alt=&quot;iraq&quot; /&gt;&lt;/p&gt; &lt;p&gt;如果用不一样的包装，这张图传达的信息就完全不一样了。&lt;/p&gt; &lt;p&gt;&lt;img src=&quot;http://gravyanecdote.com/wp-content/uploads/2014/10/Same-charts-different-message.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt; &lt;h2 id=&quot;可视化设计&quot;&gt;可视化设计&lt;/h2&gt; &lt;p&gt;通常人的阅读顺序是从上到下、从左到右的，你的数据故事要对应观众的阅读顺序。&lt;/p&gt; &lt;p&gt;&lt;img src=&quot;https://i.loli.net/2017/08/17/5995a58c9b9b8.jpg&quot; alt=&quot;order&quot; /&gt;&lt;/p&gt; &lt;p&gt;用注释、旁白格（call out box）体现图表的细节。&lt;/p&gt; &lt;p&gt;&lt;img src=&quot;https://ooo.0o0.ooo/2017/08/17/5995a57d2353a.jpg&quot; alt=&quot;caption&quot; /&gt;&lt;/p&gt; &lt;h2 id=&quot;深入阅读&quot;&gt;深入阅读&lt;/h2&gt; &lt;p&gt;&lt;a href=&quot;https://book.douban.com/subject/25813579/&quot;&gt;让创意更有黏性&lt;/a&gt;&lt;br /&gt; &lt;a href=&quot;https://book.douban.com/subject/23018929/&quot;&gt;沟通：用故事产生共鸣&lt;/a&gt;&lt;br /&gt; &lt;a href=&quot;https://book.douban.com/subject/24381654/&quot;&gt;演说之禅&lt;/a&gt;&lt;br /&gt; &lt;a href=&quot;https://book.douban.com/subject/26289656/&quot;&gt;不只是美&lt;/a&gt;&lt;/p&gt; &lt;h2 id=&quot;作业&quot;&gt;作业&lt;/h2&gt; &lt;p&gt;&lt;a href=&quot;https://matterhorn.dce.harvard.edu/engage/player/watch.html?id=697ce8bd-a41c-45d4-8201-5e0dcc8a518c&quot;&gt;Lecture Video: Story Telling and Effective Communication&lt;/a&gt;&lt;br /&gt; &lt;a href=&quot;https://github.com/cs109/2014/blob/master/homework/HW2.ipynb&quot;&gt;CS109 Homework: More Exploratory Data Analysis&lt;/a&gt;&lt;/p&gt; &lt;h2 id=&quot;致谢&quot;&gt;致谢&lt;/h2&gt; &lt;p&gt;数据科学导论笔记基于加州大学伯克利校区 &lt;a href=&quot;http://www.ds100.org/sp17/syllabus&quot;&gt;DS100&lt;/a&gt; 与哈佛大学 &lt;a href=&quot;http://cs109.github.io/2015/pages/videos.html&quot;&gt;CS109&lt;/a&gt; 的课程主页改写，参考了课件、笔记、阅读材料及作业，感谢制作这两门课程的 Joe Blitzstein、Hanspeter Pfister、Verena Kaynig-Fittkau、Joseph E. Gonzalez、Joseph Hellerstein、Deborah Nolan 和 Bin Yu。本文基于 CS 109 的 Lecture 6: Story Telling and Effective Communication。&lt;/p&gt; </description><pubDate>Thu, 17 Aug 2017 22:15:00 +0100</pubDate><link>http://localhost:4000/posts/data-story/</link><guid isPermaLink="true">http://localhost:4000/posts/data-story/</guid> </item> <item><title>探索性数据分析</title><description>&lt;ul id=&quot;markdown-toc&quot;&gt; &lt;li&gt;&lt;a href=&quot;#eda-是什么&quot; id=&quot;markdown-toc-eda-是什么&quot;&gt;EDA 是什么&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;#正直的数据分析&quot; id=&quot;markdown-toc-正直的数据分析&quot;&gt;正直的数据分析&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;#简化图表&quot; id=&quot;markdown-toc-简化图表&quot;&gt;简化图表&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;#用对图表&quot; id=&quot;markdown-toc-用对图表&quot;&gt;用对图表&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;#用对颜色&quot; id=&quot;markdown-toc-用对颜色&quot;&gt;用对颜色&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;#深入阅读&quot; id=&quot;markdown-toc-深入阅读&quot;&gt;深入阅读&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;#作业&quot; id=&quot;markdown-toc-作业&quot;&gt;作业&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;#致谢&quot; id=&quot;markdown-toc-致谢&quot;&gt;致谢&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;本笔记是&lt;a href=&quot;https://github.com/iewaij/introDataScience&quot;&gt;数据科学导论系列&lt;/a&gt;的第二篇，Markdown 文件开源于 &lt;a href=&quot;https://github.com/iewaij/introDataScience/blob/master/Exploratory%20Data%20Analysis.md&quot;&gt;GitHub&lt;/a&gt;。&lt;/p&gt; &lt;h2 id=&quot;eda-是什么&quot;&gt;EDA 是什么&lt;/h2&gt; &lt;p&gt;探索性数据分析（Exploratory Data Analysis, EDA）像侦探工作，你不知道自己会找到什么，所以你也不会做过多的假设，通过可视化工具对数据进行一次又一次的检视来找到线索，并对结果保持开放的心态，正如 EDA 之父 John Tukey 所言，「探索性数据是一种态度，是对我们相信存在抑或不存在的事物保持灵活的审视」。&lt;/p&gt; &lt;blockquote&gt; &lt;p&gt;Exploratory data analysis is an attitude, a state of flexibility, a willingness to look for those things that we believe are not there, as well as those that we believe to be there.&lt;/p&gt; &lt;/blockquote&gt; &lt;p&gt;与 EDA 区别的是传统统计分析（Formal Analysis），传统统计分析在假设样本分布后，把数据套入假设模型再做分析。EDA 所做的，就是重新检视我们对数据的理解，为之后的传统统计分析打下基础。&lt;/p&gt; &lt;p&gt;本篇将讨论如何正确地运用可视化工具进行探索性数据分析，这些准则也适用于数据可视化，但探索性数据分析和数据可视化的目标是不同的，探索性数据分析重在「探索」，为研究者服务；数据可视化重在「讲故事」，为观众服务。&lt;/p&gt; &lt;h2 id=&quot;正直的数据分析&quot;&gt;正直的数据分析&lt;/h2&gt; &lt;p&gt;做任何研究，研究者都不能事先确定任何立场，对于 EDA 来说更是如此，研究者必须保持怀疑和谨慎的态度，即便数据结果与你预期大不相同，也要尽量做到客观。&lt;/p&gt; &lt;p&gt;不正直的数据分析有两类，一类是研究者想让数据结果更显著来支持自己的立场，包括&lt;a href=&quot;https://www.howsci.com/p-hacking.html&quot;&gt;篡改 p 值（p-hacking）&lt;/a&gt;、数据窥探（data snooping）等等，这些行为往往让你的实验无法重复。xkcd 有篇&lt;a href=&quot;https://imgs.xkcd.com/comics/significant.png&quot;&gt;漫画&lt;/a&gt;就讽刺了这个现象。&lt;/p&gt; &lt;p&gt;&lt;img src=&quot;https://imgs.xkcd.com/comics/significant.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt; &lt;p&gt;另一类不正直的数据分析是研究者故意误导观众，例如 FOX 把柱状图的下半部分砍掉，造成增长很多的假象。&lt;/p&gt; &lt;p&gt;&lt;img src=&quot;http://lijiawei.cc/images/foxChart1.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt; &lt;p&gt;而事实上，如果让柱状图从 0 开始显示，结果如下。&lt;/p&gt; &lt;p&gt;&lt;img src=&quot;http://lijiawei.cc/images/foxChart2.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt; &lt;p&gt;下图中，FOX 故意挑选某些月份的数据，误导观众以为奥巴马政府的失业率不断走高，可以看到 x 轴的月份根本不是每季度（By Quarter） 的。&lt;/p&gt; &lt;p&gt;&lt;img src=&quot;http://lijiawei.cc/images/foxChart3.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt; &lt;h2 id=&quot;简化图表&quot;&gt;简化图表&lt;/h2&gt; &lt;p&gt;尽最大的可能简化图表，数据可视化的初衷就是减轻人们理解数据的负担，简化图表能让观众更专注于数据上，可视化大师 Edward Tufte 提出了要用「最少的油墨」显示「最多的数据」，以下是几个简化要点。&lt;/p&gt; &lt;p&gt;首先，绝对不使用 3D，3D 完全不如 2D 直观。&lt;/p&gt; &lt;p&gt;&lt;img src=&quot;http://lijiawei.cc/images/dont.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt; &lt;p&gt;&lt;img src=&quot;http://lijiawei.cc/images/3dBar.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt; &lt;p&gt;&lt;img src=&quot;http://lijiawei.cc/images/2dBar.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt; &lt;p&gt;其次，简化一切无用的元素，去除背景、网格、图表框。&lt;/p&gt; &lt;p&gt;&lt;img src=&quot;http://lijiawei.cc/images/chartJunk1.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt; &lt;p&gt;&lt;img src=&quot;http://lijiawei.cc/images/chartJunk2.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt; &lt;p&gt;&lt;img src=&quot;http://lijiawei.cc/images/chartJunk3.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt; &lt;h2 id=&quot;用对图表&quot;&gt;用对图表&lt;/h2&gt; &lt;p&gt;&lt;img src=&quot;http://lijiawei.cc/images/choosing_a_good_chart.jpg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt; &lt;p&gt;A. V. Abela 制作了一张图表建议，放在他的&lt;a href=&quot;http://extremepresentation.typepad.com/blog/2015/01/announcing-the-slide-chooser.html&quot;&gt;博客&lt;/a&gt;上。简而言之，描述趋势使用折线图，描述数量使用柱状图（且必须从 0 开始），描述关系使用散点图，描述比例使用饼状图。&lt;/p&gt; &lt;p&gt;科学家经过 30 年的研究，发现人对位置、长度和角度的感知最敏锐，可以用来表示数量，其次是面积和密度，可表示顺序，对于颜色和形状的感知是最不精确的，只可用来区分类别。&lt;/p&gt; &lt;p&gt;&lt;img src=&quot;http://lijiawei.cc/images/visEfficiency.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt; &lt;h2 id=&quot;用对颜色&quot;&gt;用对颜色&lt;/h2&gt; &lt;p&gt;比较数量大小的时候，不要使用彩虹色，因为彩虹色不能体现线性关系，我们的认知没法感觉到红色比绿色「高」，更好的选择时用不同深浅的颜色。彩虹色还会对色盲人群造成困扰。&lt;/p&gt; &lt;p&gt;颜色的建议可以在 &lt;a href=&quot;http://colorbrewer2.org/#type=sequential&amp;amp;scheme=PuBu&amp;amp;n=3&quot;&gt;Color Brewer&lt;/a&gt; 找到。这些颜色在数据可视化库 Seaborn 上也有。&lt;/p&gt; &lt;h2 id=&quot;深入阅读&quot;&gt;深入阅读&lt;/h2&gt; &lt;p&gt;&lt;a href=&quot;http://flowingdata.com&quot;&gt;Flowing Data Blog&lt;/a&gt;&lt;br /&gt; &lt;a href=&quot;https://book.douban.com/subject/5969455/&quot;&gt;Visualize This&lt;/a&gt;&lt;br /&gt; &lt;a href=&quot;https://book.douban.com/subject/1438332/&quot;&gt;Visual Explanations&lt;/a&gt;&lt;br /&gt; &lt;a href=&quot;https://book.douban.com/subject/1861189/&quot;&gt;Envisioning Information&lt;/a&gt;&lt;br /&gt; &lt;a href=&quot;https://book.douban.com/subject/1316642/&quot;&gt;The Visual Display of Quantitative Information&lt;/a&gt;&lt;br /&gt; &lt;a href=&quot;https://book.douban.com/subject/3815834/&quot;&gt;Now You See It&lt;/a&gt;&lt;/p&gt; &lt;h2 id=&quot;作业&quot;&gt;作业&lt;/h2&gt; &lt;p&gt;本篇笔记更「视觉向」，文字很难表达全面，所以推荐读者回顾课程视频，以对「什么样的可视化是好的可视化」有更好的感知。DS100 在这节课中使用了案例研究，并在案例研究中结合了数据整理和 EDA，在本篇笔记里没有提及，所以也推荐读者参阅。&lt;/p&gt; &lt;p&gt;&lt;a href=&quot;https://matterhorn.dce.harvard.edu/engage/player/watch.html?id=4dc7719e-1ef4-4ee5-a9d9-fc48c3e13185&quot;&gt;CS109 Lecture Video: Exploratory Data Analysis&lt;/a&gt;&lt;br /&gt; &lt;a href=&quot;https://drive.google.com/file/d/0B7gkaDYGT5X5X2ZKaHZtZkVWVUE/view&quot;&gt;DS100 Lecture Slides: Exploratory Data Analysis&lt;/a&gt;&lt;br /&gt; &lt;a href=&quot;https://github.com/cs109/2014/blob/master/homework/HW1.ipynb&quot;&gt;CS109 Homework: Exploratory Data Analysis&lt;/a&gt;&lt;/p&gt; &lt;h2 id=&quot;致谢&quot;&gt;致谢&lt;/h2&gt; &lt;p&gt;数据科学导论笔记基于加州大学伯克利校区 &lt;a href=&quot;http://www.ds100.org/sp17/syllabus&quot;&gt;DS100&lt;/a&gt; 与哈佛大学 &lt;a href=&quot;http://cs109.github.io/2015/pages/videos.html&quot;&gt;CS109&lt;/a&gt; 的课程主页改写，参考了课件、笔记、阅读材料及作业，感谢制作这两门课程的 Joe Blitzstein、Hanspeter Pfister、Verena Kaynig-Fittkau、Joseph E. Gonzalez、Joseph Hellerstein、Deborah Nolan 和 Bin Yu。本文基于 DS100 Week 3 - Exploratory Data Analysis，及 CS 109 Lecture 3 - Exploratory Data Analysis。&lt;/p&gt; </description><pubDate>Fri, 11 Aug 2017 22:00:00 +0100</pubDate><link>http://localhost:4000/posts/eda/</link><guid isPermaLink="true">http://localhost:4000/posts/eda/</guid> </item> <item><title>数据收集与整理</title><description>&lt;ul id=&quot;markdown-toc&quot;&gt; &lt;li&gt;&lt;a href=&quot;#数据收集&quot; id=&quot;markdown-toc-数据收集&quot;&gt;数据收集&lt;/a&gt; &lt;ul&gt; &lt;li&gt;&lt;a href=&quot;#爬虫&quot; id=&quot;markdown-toc-爬虫&quot;&gt;爬虫&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;#api&quot; id=&quot;markdown-toc-api&quot;&gt;API&lt;/a&gt; &lt;ul&gt; &lt;li&gt;&lt;a href=&quot;#json&quot; id=&quot;markdown-toc-json&quot;&gt;JSON&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;#第三方库&quot; id=&quot;markdown-toc-第三方库&quot;&gt;第三方库&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;/li&gt; &lt;/ul&gt; &lt;/li&gt; &lt;li&gt;&lt;a href=&quot;#数据整理&quot; id=&quot;markdown-toc-数据整理&quot;&gt;数据整理&lt;/a&gt; &lt;ul&gt; &lt;li&gt;&lt;a href=&quot;#整理要点&quot; id=&quot;markdown-toc-整理要点&quot;&gt;整理要点&lt;/a&gt; &lt;ul&gt; &lt;li&gt;&lt;a href=&quot;#结构-structure数据的形状&quot; id=&quot;markdown-toc-结构-structure数据的形状&quot;&gt;结构 (Structure)：数据的形状&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;#粒度-granularity-主键的精细程度&quot; id=&quot;markdown-toc-粒度-granularity-主键的精细程度&quot;&gt;粒度 (Granularity): 主键的精细程度&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;#可信度-faithfulness-数据的真实程度&quot; id=&quot;markdown-toc-可信度-faithfulness-数据的真实程度&quot;&gt;可信度 (Faithfulness): 数据的真实程度&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;#时间契合度-temporality-数据记录的时间解决问题的有效程度&quot; id=&quot;markdown-toc-时间契合度-temporality-数据记录的时间解决问题的有效程度&quot;&gt;时间契合度 (Temporality): 数据记录的时间解决问题的有效程度&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;#完整性-scope-数据的完整程度&quot; id=&quot;markdown-toc-完整性-scope-数据的完整程度&quot;&gt;完整性 (Scope): 数据的完整程度&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;/li&gt; &lt;li&gt;&lt;a href=&quot;#工具&quot; id=&quot;markdown-toc-工具&quot;&gt;工具&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;#unix-命令行&quot; id=&quot;markdown-toc-unix-命令行&quot;&gt;UNIX 命令行&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;#pandas&quot; id=&quot;markdown-toc-pandas&quot;&gt;Pandas&lt;/a&gt; &lt;ul&gt; &lt;li&gt;&lt;a href=&quot;#导入操作&quot; id=&quot;markdown-toc-导入操作&quot;&gt;导入操作&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;#数据属性&quot; id=&quot;markdown-toc-数据属性&quot;&gt;数据属性&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;#选择条目&quot; id=&quot;markdown-toc-选择条目&quot;&gt;选择条目&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;#split-apply-combine&quot; id=&quot;markdown-toc-split-apply-combine&quot;&gt;Split-apply-combine&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;#函数&quot; id=&quot;markdown-toc-函数&quot;&gt;函数&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;/li&gt; &lt;/ul&gt; &lt;/li&gt; &lt;li&gt;&lt;a href=&quot;#作业&quot; id=&quot;markdown-toc-作业&quot;&gt;作业&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;#致谢&quot; id=&quot;markdown-toc-致谢&quot;&gt;致谢&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;本笔记是&lt;a href=&quot;https://github.com/iewaij/introDataScience&quot;&gt;数据科学导论系列&lt;/a&gt;的第一篇，另有阅读体验更加的 &lt;a href=&quot;https://nbviewer.jupyter.org/github/iewaij/introDataScience/blob/master/Data%20Collecting%2C%20Unboxing%20and%20Wrangling.ipynb&quot;&gt;Jupyter Notebook 版本&lt;/a&gt;，Jupyter Notebook 和 Markdown 文件开源于 &lt;a href=&quot;https://github.com/iewaij/introDataScience&quot;&gt;GitHub&lt;/a&gt;。&lt;/p&gt; &lt;h2 id=&quot;数据收集&quot;&gt;数据收集&lt;/h2&gt; &lt;p&gt;尽管互联网上已经有很多数据集，但有时候我们需要的数据不是现成的，需要收集数据。收集这些数据通常有两种方法：爬虫和 API。&lt;/p&gt; &lt;p&gt;爬虫就是写程序把网页上的内容抓取下来，理论上，任何你能在网上看到的数据都是可以用爬虫抓取的，但要遵守法律、网站条款和隐私权，控制爬虫的抓取速度，不要把别人服务器搞垮了。&lt;/p&gt; &lt;p&gt;API 可以理解为网站给程序用的接口，API 给出的数据更友好，但每个网站的 API 格式都不同，需要查阅文档。有些网站不提供 API 接口，不妨去 GitHub 搜一搜，通常能找到开源的非官方 API，这些 API 其实就是打包好的爬虫，你只要调用命令就能获得数据了。&lt;/p&gt; &lt;h3 id=&quot;爬虫&quot;&gt;爬虫&lt;/h3&gt; &lt;p&gt;爬虫首先需要发送请求给服务器，然后服务器会发回网页内容。这个过程有多个库可以使用，例如 &lt;a href=&quot;http://docs.python-requests.org/en/master/&quot;&gt;requests&lt;/a&gt;。&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-Python&quot;&gt;import requests r = requests.get('http://httpbin.org')) content = r.text &lt;/code&gt;&lt;/pre&gt; &lt;p&gt;发回网页内容后，你就能得到 HTML 代码，HTML 代码构成的就是网页的内容，它们通常长这样：&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-HTML&quot;&gt;&amp;lt;!DOCTYPE html&amp;gt; &amp;lt;html&amp;gt; &amp;lt;head&amp;gt; &amp;lt;title&amp;gt;This is a title&amp;lt;/title&amp;gt; &amp;lt;/head&amp;gt; &amp;lt;body&amp;gt; &amp;lt;h2&amp;gt; Test &amp;lt;/h2&amp;gt; &amp;lt;p&amp;gt;Hello world!&amp;lt;/p&amp;gt; &amp;lt;/body&amp;gt; &amp;lt;/html&amp;gt; &lt;/code&gt;&lt;/pre&gt; &lt;p&gt;HTML 代码的特点有：&lt;/p&gt; &lt;ol&gt; &lt;li&gt;标签通常成对出现&lt;/li&gt; &lt;li&gt;标题 &lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;lt;h1&amp;gt;&amp;lt;/h1&amp;gt; ... &amp;lt;h6&amp;gt;&amp;lt;/h6&amp;gt;&lt;/code&gt;&lt;/li&gt; &lt;li&gt;段落 &lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;lt;p&amp;gt;&amp;lt;/p&amp;gt;&lt;/code&gt;&lt;/li&gt; &lt;li&gt;换行 &lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;lt;br&amp;gt;&lt;/code&gt;&lt;/li&gt; &lt;li&gt;href 内容是链接 &lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;lt;a href=&quot;http://www.example.com/&quot;&amp;gt;An example link&amp;lt;/a&amp;gt;&lt;/code&gt;&lt;/li&gt; &lt;/ol&gt; &lt;p&gt;在 Chrome 或者 Safari 浏览器里，你只要右键网页-检查就能找到你需要的数据对应的 HTML 代码。&lt;/p&gt; &lt;p&gt;&lt;img src=&quot;https://ws1.sinaimg.cn/large/006tKfTcgy1fica17mz53j31kw19ch22.jpg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt; &lt;p&gt;你可以硬着头皮用正则表达式筛选出你要的数据，更好的方法是用现成的分析 HTML 的工具，例如 BeautifulSoup、&lt;a href=&quot;http://selenium-python.readthedocs.org/en/latest/index.html&quot;&gt;Selenium&lt;/a&gt;。&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-Python&quot;&gt;from bs4 import BeautifulSoup # 把 Requsests 得到的内容传给 BeautifulSoup，得到 bs4 对象 soup = BeautifulSoup(source) # 查找所有的 &amp;lt;a&amp;gt;...&amp;lt;/a&amp;gt; 标签 aTag = soup.findAll('a') # 得到链接 atag.get('href') # 得到链接并生成列表 link_list = [l.get('href') for l in aTag] for l in link_list: if l is not None and l[:4] == 'http': external_links.append(l) &lt;/code&gt;&lt;/pre&gt; &lt;p&gt;爬取的数据可以用词典保存，Python 还有个很重要的模块叫 &lt;a href=&quot;https://www.liaoxuefeng.com/wiki/0014316089557264a6b348958f449949df42a6d3a2e542c000/001431953239820157155d21c494e5786fce303f3018c86000&quot;&gt;collections&lt;/a&gt;，为数据科学家提供了很多工具，例如加强型词典 defaultdict 和频率计算 Counter。&lt;/p&gt; &lt;p&gt;限于篇幅，爬虫部分就在这里结束。如果你想深入了解，这里有一些爬虫实例：&lt;/p&gt; &lt;p&gt;&lt;a href=&quot;https://jessesw.com/Data-Science-Skills/&quot;&gt;使用 urllib2 和 BeautifulSoup 爬取数据科学家所需技能&lt;/a&gt;&lt;br /&gt; &lt;a href=&quot;https://www.youtube.com/watch?v=p1iX0uxM1w8&quot;&gt;使用 LXML 和 Selenium 爬取洛杉矶 Happy Hour (PyCon 2014 Tutorial)&lt;/a&gt;&lt;/p&gt; &lt;h3 id=&quot;api&quot;&gt;API&lt;/h3&gt; &lt;p&gt;网站为了防止 API 被滥用，通常会要求你注册账号，访问 API 的时候要加上你的账号密钥。有些 API 能控制你的账户行为，例如用 Twitter API 可以发推，所以不要让你的密钥出现在你的代码里，而是让代码访问密钥文件得到密钥。&lt;/p&gt; &lt;p&gt;这里有一些有意思的 API：&lt;/p&gt; &lt;p&gt;&lt;a href=&quot;https://dev.twitter.com/rest/public&quot;&gt;Twitter&lt;/a&gt;&lt;br /&gt; &lt;a href=&quot;http://developer.rottentomatoes.com/member/register&quot;&gt;烂番茄电影评分&lt;/a&gt;&lt;br /&gt; &lt;a href=&quot;https://avgle.github.io/doc/&quot;&gt;老司机影视库&lt;/a&gt;&lt;/p&gt; &lt;h4 id=&quot;json&quot;&gt;JSON&lt;/h4&gt; &lt;p&gt;有时候 API 发回的是 JSON 格式的数据，JSON 的全称是 JavaScript Object Notation，格式和 Python 中的词典很像，但不好直接处理，需要转换成词典。&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-Python&quot;&gt;import json dataDict = json.loads(data) &lt;/code&gt;&lt;/pre&gt; &lt;h4 id=&quot;第三方库&quot;&gt;第三方库&lt;/h4&gt; &lt;p&gt;有些 API 非常复杂，例如 &lt;a href=&quot;https://dev.twitter.com/rest/public&quot;&gt;Twitter&lt;/a&gt;，用第三方库会省力很多，例如 &lt;a href=&quot;http://tweepy.readthedocs.io/&quot;&gt;tweepy&lt;/a&gt;。&lt;/p&gt; &lt;h2 id=&quot;数据整理&quot;&gt;数据整理&lt;/h2&gt; &lt;p&gt;收集数据后，我们先要探索数据 (data discovery， data unboxing)，以对数据有基本的认识。数据可能是「脏」的，或者对我们的工作是无用的，所以还需要整理数据 (data wrangling, data prep, data munging, data transformation)，让数据更好地为分析师服务。&lt;/p&gt; &lt;p&gt;&lt;a href=&quot;http://db.cs.berkeley.edu/papers/vast12-interview.pdf&quot;&gt;Kandel et al.&lt;/a&gt; (2012) 采访了35位分析师后发现，许多分析师都把大部分时间花在整理数据上，而整理数据的过程，让分析师更了解数据并能提出好的猜想。&lt;/p&gt; &lt;blockquote&gt; &lt;p&gt;I spend more than half of my time integrating, cleansing and transforming data without doing any actual analysis. Most of time I’m lucky if I get to do any ‘analysis’ at all…&lt;/p&gt; &lt;p&gt;… Most of the time once you transform the data … the insights can be scarily obvious.&lt;/p&gt; &lt;/blockquote&gt; &lt;p&gt;贝尔实验室数学家、R 语言之父 John Tukey 在 1965 年就提出了&lt;a href=&quot;https://books.google.com.hk/books?id=C1guHWTlVVoC&amp;amp;lpg=PA554&amp;amp;ots=Gyad7RQzzG&amp;amp;dq=tukey%201965%20the%20flexibility%20of%20the%20informed%20human%20mind&amp;amp;hl=zh-CN&amp;amp;pg=PA554#v=onepage&amp;amp;q=tukey%201965%20the%20flexibility%20of%20the%20informed%20human%20mind&amp;amp;f=false&quot;&gt;类似的见解&lt;/a&gt;。Tukey 指出，统计学家要想灵活地分析数据，就必须让数据对使用者更友好，这个过程如此重要，以致于是数学、统计模型、计算机不能比拟的。&lt;/p&gt; &lt;blockquote&gt; &lt;p&gt;at all stages of data analysis, the nature and detail of output, both actual and potential, need to be matched to the capabilities of the people who use it and want it … Nothing - not the careful logic of mathematics, not statistical models and theories, not the awesome arithmetic power of modern computers - nothing can substitute here for &lt;strong&gt;the flexibility of the informed human mind&lt;/strong&gt;.&lt;/p&gt; &lt;/blockquote&gt; &lt;p&gt;Hoaglin(2003) 有一篇&lt;a href=&quot;https://projecteuclid.org/euclid.ss/1076102418&quot;&gt;论文&lt;/a&gt;讨论了 John Tukey 的事迹和他对统计学的贡献。&lt;/p&gt; &lt;h3 id=&quot;整理要点&quot;&gt;整理要点&lt;/h3&gt; &lt;p&gt;这里提供一个通用的整理要点，但是整理数据是个主观过程。没有一成不变的规则&lt;/p&gt; &lt;h4 id=&quot;结构-structure数据的形状&quot;&gt;结构 (Structure)：数据的形状&lt;/h4&gt; &lt;ul&gt; &lt;li&gt;数据是矩形结构（Rectangular Data）吗？ 矩形结构包含表格（用关系代数处理）和矩阵（用线性代数处理）。如果不是这两者，例如 JSON、XML，需要转换成矩形结构（Rectangular Data）。&lt;/li&gt; &lt;li&gt;有没有超出定义的数据？例如在日期里出现了 ￥120。&lt;/li&gt; &lt;li&gt;数据内有嵌套吗？例如在支出里出现了￥180（住宿）。&lt;/li&gt; &lt;li&gt;数据是什么类型？定类数据（nominal）、定序数据（ordinal）还是定量数据（quantitative）？&lt;/li&gt; &lt;li&gt;相同类型的数据格式一样吗？例如日期里出现了 4th May 和 04-05-2017&lt;/li&gt; &lt;/ul&gt; &lt;h4 id=&quot;粒度-granularity-主键的精细程度&quot;&gt;粒度 (Granularity): 主键的精细程度&lt;/h4&gt; &lt;p&gt;主键（primary key）指赋予每条数据独特性的指标，例如 &lt;code class=&quot;highlighter-rouge&quot;&gt;user_id&lt;/code&gt;、&lt;code class=&quot;highlighter-rouge&quot;&gt;transaction_id&lt;/code&gt;、&lt;code class=&quot;highlighter-rouge&quot;&gt;(City, State)&lt;/code&gt;。主键的值最多出现一次，主键决定了数据的粒度。根据主键，可以把不同的数据拼合起来。&lt;/p&gt; &lt;h4 id=&quot;可信度-faithfulness-数据的真实程度&quot;&gt;可信度 (Faithfulness): 数据的真实程度&lt;/h4&gt; &lt;p&gt;可信度只能在上下文（context）中检验，如果出现了偏离数据分布太多的异常值（outlier），有三者方法处理：&lt;/p&gt; &lt;ol&gt; &lt;li&gt;删掉&lt;/li&gt; &lt;li&gt;改为最接近的非异常值（non-outlier）&lt;/li&gt; &lt;li&gt;保持数据原样，并添加一栏注明是否为异常值，添加一栏注明修改后的结果。&lt;/li&gt; &lt;/ol&gt; &lt;h4 id=&quot;时间契合度-temporality-数据记录的时间解决问题的有效程度&quot;&gt;时间契合度 (Temporality): 数据记录的时间解决问题的有效程度&lt;/h4&gt; &lt;h4 id=&quot;完整性-scope-数据的完整程度&quot;&gt;完整性 (Scope): 数据的完整程度&lt;/h4&gt; &lt;p&gt;是否有缺失的数据或者条目？可以利用数字排序推测，比如数据中房间号有101、103、104，那么我们可以认为 102 缺失。&lt;/p&gt; &lt;p&gt;限于篇幅，数据整理要点就说到这，如果你想更深入的阅读，可以试试以下链接：&lt;/p&gt; &lt;p&gt;&lt;a href=&quot;https://github.com/Quartz/bad-data-guide&quot;&gt;The Quartz guide to bad data&lt;/a&gt; &lt;br /&gt; 中文翻译：&lt;a href=&quot;http://djchina.org/2016/07/12/bad_data_guide/&quot;&gt;The Quartz 坏数据手册&lt;/a&gt; &lt;br /&gt; &lt;a href=&quot;http://vis.stanford.edu/papers/data-wrangling&quot;&gt;Research Directions in Data Wrangling, Heer et al. 2011&lt;/a&gt;&lt;/p&gt; &lt;h3 id=&quot;工具&quot;&gt;工具&lt;/h3&gt; &lt;p&gt;数据科学家使用大量的工具来提高整理和分析数据的效率。&lt;/p&gt; &lt;p&gt;文本编辑器，例如 Atom、Sublime Text，文本编辑器轻量、小地图（mini-map）便于定位、丰富的快捷键，可以方便地对数据进行简单修改、查找替换。&lt;/p&gt; &lt;p&gt;&lt;a href=&quot;http://trifacta.com&quot;&gt;Trifacta&lt;/a&gt; 是免费的可视化数据整理工具，诞生于斯坦福和伯克利，支持编程操作和智能预测。&lt;/p&gt; &lt;p&gt;UNIX 命令行，可以向操作系统内核直接发送操作指令，省去进入编程环境的步骤，&lt;a href=&quot;https://ipn.li/kernelpanic/28/&quot;&gt;内核恐慌第28期&lt;/a&gt;回顾了 command line/shell 的历史，有兴趣的可以听一听。 macOS 上可以安装 iTerm2 和 zsh 进行命令行操作。命令行操作也可以在 Jupyter Notebook 中完成，在命令前加上 &lt;code class=&quot;highlighter-rouge&quot;&gt;!&lt;/code&gt; 即可。&lt;/p&gt; &lt;p&gt;Pandas 是 Wes McKinney 开发的专门用于数据操作的 Python 第三方库，设计参考了 R 语言。&lt;/p&gt; &lt;p&gt;下面我们使用 &lt;a href=&quot;https://grouplens.org/datasets/movielens/latest/&quot;&gt;movielens&lt;/a&gt; 的数据，演示 UNIX 命令行和 Pandas 的使用。写代码之前，有几个建议：&lt;/p&gt; &lt;ol&gt; &lt;li&gt;有问题就 Google。&lt;/li&gt; &lt;li&gt;某种程度上，程序员就是复制粘贴 Stack Overflow 上的代码然后跑通的人。&lt;/li&gt; &lt;li&gt;使用快捷键。Jupyter Notebook 中，按 &lt;code class=&quot;highlighter-rouge&quot;&gt;Tab&lt;/code&gt; 自动补全命令；在命令后加上 &lt;code class=&quot;highlighter-rouge&quot;&gt;?&lt;/code&gt; 可以弹出手册界面，&lt;code class=&quot;highlighter-rouge&quot;&gt;esc&lt;/code&gt; 退出；写代码时按 &lt;code class=&quot;highlighter-rouge&quot;&gt;Shift + Tab&lt;/code&gt; 可以更快地显示手册，如下图所示。&lt;/li&gt; &lt;/ol&gt; &lt;p&gt;&lt;img src=&quot;https://ws1.sinaimg.cn/large/006tNc79gy1fielnrof6zj31120tjafe.jpg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt; &lt;ol&gt; &lt;li&gt;取有意义的变量名，可以通过变量名判断变量是什么。&lt;/li&gt; &lt;/ol&gt; &lt;h3 id=&quot;unix-命令行&quot;&gt;UNIX 命令行&lt;/h3&gt; &lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;man something&lt;/code&gt; 手册（manual）的缩写，可以查看任何 UNIX 命令的指引。&lt;/p&gt; &lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;ls -lh movieLens/&lt;/code&gt; 查看 &lt;code class=&quot;highlighter-rouge&quot;&gt;movieLens/&lt;/code&gt; 文件夹下的文件目录。&lt;/p&gt; &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;total 6136 -rw-r--r--@ 1 Jiawei staff 8.2K Oct 17 2016 README.txt -rw-r--r--@ 1 Jiawei staff 179K Oct 17 2016 links.csv -rw-r--r--@ 1 Jiawei staff 448K Oct 17 2016 movies.csv -rw-r--r--@ 1 Jiawei staff 2.3M Oct 17 2016 ratings.csv -rw-r--r--@ 1 Jiawei staff 41K Oct 17 2016 tags.csv &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;cat movieLens/README.txt&lt;/code&gt; 查看 &lt;code class=&quot;highlighter-rouge&quot;&gt;README.txt&lt;/code&gt; 文件全文。&lt;/p&gt; &lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;wc movieLens/movies.csv movieLens/ratings.csv movieLens/tags.csv&lt;/code&gt; wc 是 word count 的缩写，查看 &lt;code class=&quot;highlighter-rouge&quot;&gt;movieLens/movies.csv&lt;/code&gt;、 &lt;code class=&quot;highlighter-rouge&quot;&gt;movieLens/ratings.csv&lt;/code&gt; 、&lt;code class=&quot;highlighter-rouge&quot;&gt;movieLens/tags.csv&lt;/code&gt; 文件的行数、词数、字节数。&lt;/p&gt; &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt; 9126 39127 458390 movieLens/movies.csv 100005 100005 2438266 movieLens/ratings.csv 1297 1887 41902 movieLens/tags.csv 110428 141019 2938558 total &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;head movieLens/movies.csv movieLens/ratings.csv movieLens/tags.csv&lt;/code&gt; 查看 &lt;code class=&quot;highlighter-rouge&quot;&gt;movieLens/movies.csv&lt;/code&gt;、 &lt;code class=&quot;highlighter-rouge&quot;&gt;movieLens/ratings.csv&lt;/code&gt; 、&lt;code class=&quot;highlighter-rouge&quot;&gt;movieLens/tags.csv&lt;/code&gt; 文件的前10行。&lt;/p&gt; &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;==&amp;gt; movieLens/movies.csv &amp;lt;== movieId,title,genres 1,Toy Story (1995),Adventure|Animation|Children|Comedy|Fantasy 2,Jumanji (1995),Adventure|Children|Fantasy 3,Grumpier Old Men (1995),Comedy|Romance 4,Waiting to Exhale (1995),Comedy|Drama|Romance 5,Father of the Bride Part II (1995),Comedy 6,Heat (1995),Action|Crime|Thriller 7,Sabrina (1995),Comedy|Romance 8,Tom and Huck (1995),Adventure|Children 9,Sudden Death (1995),Action ==&amp;gt; movieLens/ratings.csv &amp;lt;== userId,movieId,rating,timestamp 1,31,2.5,1260759144 1,1029,3.0,1260759179 1,1061,3.0,1260759182 1,1129,2.0,1260759185 1,1172,4.0,1260759205 1,1263,2.0,1260759151 1,1287,2.0,1260759187 1,1293,2.0,1260759148 1,1339,3.5,1260759125 ==&amp;gt; movieLens/tags.csv &amp;lt;== userId,movieId,tag,timestamp 15,339,sandra 'boring' bullock,1138537770 15,1955,dentist,1193435061 15,7478,Cambodia,1170560997 15,32892,Russian,1170626366 15,34162,forgettable,1141391765 15,35957,short,1141391873 15,37729,dull story,1141391806 15,45950,powerpoint,1169616291 15,100365,activist,1425876220 &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;h3 id=&quot;pandas&quot;&gt;Pandas&lt;/h3&gt; &lt;p&gt;我们可以用 Pandas 做一些简单的数据操作来整理数据，在后续的章节里我们会更深入地了解 Pandas。&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-Python&quot;&gt;import pandas as pd # 导入 pandas 模块，缩写为 pd pd.set_option('display.max_rows', 8) # 设置最多显示 8 行表格 &lt;/code&gt;&lt;/pre&gt; &lt;h4 id=&quot;导入操作&quot;&gt;导入操作&lt;/h4&gt; &lt;p&gt;这里有必要介绍一下索引 (Index) 的概念，索引就像是门牌号，通过索引可以找到索引对应的数据。例如 Python 的列表，可以用 &lt;code class=&quot;highlighter-rouge&quot;&gt;aList[n]&lt;/code&gt; 来表示 aList 位置 n 上的数据，这个 &lt;code class=&quot;highlighter-rouge&quot;&gt;[n]&lt;/code&gt; 就是列表的索引。Pandas 有两种数据结构，一维的 Series 和二维的 DataFrame，这两个数据结构都有 Index 对象作为索引，用 Numpy 保存索引外的数据，Series 有 index，DataFrame 有两个，分别是 index 和 columns，index 是纵向的，columns 是横向的。&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-Python&quot;&gt;# 导入 csv 文件，并把第 0 列设为 index movies = pd.read_csv('movieLens/movies.csv', index_col=0) # 导入 csv 文件，不设置 index ratings = pd.read_csv('movieLens/ratings.csv') tags = pd.read_csv('movieLens/tags.csv') &lt;/code&gt;&lt;/pre&gt; &lt;h4 id=&quot;数据属性&quot;&gt;数据属性&lt;/h4&gt; &lt;pre&gt;&lt;code class=&quot;language-Python&quot;&gt;# 使用 describe() 描述数据，输出结果视情况而定 movies.describe() &lt;/code&gt;&lt;/pre&gt; &lt;pre&gt;&lt;code class=&quot;language-Python&quot;&gt;movies.dtypes # 查看数据类型 movies.shape # 查看数据形状 movies.index # 查看 index movies.columns # 查看 columns &lt;/code&gt;&lt;/pre&gt; &lt;h4 id=&quot;选择条目&quot;&gt;选择条目&lt;/h4&gt; &lt;p&gt;标签 (label) 就是 index 和 column 上不同索引的名字，这些索引可以用整数表示，也可以用 label 表示。&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-Python&quot;&gt;# 选择前 5 行，两者等价 movies[:5] movies.iloc[:5, :] # 依据 label 选择对应条目，两者等价 movies.title movies['title'] &lt;/code&gt;&lt;/pre&gt; &lt;pre&gt;&lt;code class=&quot;language-Python&quot;&gt;# 选择前五行的 genres 条目，loc 接受 label，iloc 接受整数 movies.loc[:5, 'genres'] movies.iloc[:5, 1] # 传入多个列表选择数据，注意传入嵌套列表的列表 movies[['title', 'genres']] # 与上一条命令等价 showList = ['title', 'genres'] movies[showList] &lt;/code&gt;&lt;/pre&gt; &lt;pre&gt;&lt;code class=&quot;language-Python&quot;&gt;# 输出一系列布尔值列表 movies['genres'] == 'Comedy' # 依据布尔值选择 genres 为 Comedy 的条目 movies[movies['genres'] == 'Comedy'] # 选择多个布尔值条件（类型是 Comedy 且标题中含 Gay 的电影） movies[(movies['genres'] == 'Comedy') &amp;amp; (movies['title'].str.contains('Gay'))] &lt;/code&gt;&lt;/pre&gt; &lt;h4 id=&quot;split-apply-combine&quot;&gt;Split-apply-combine&lt;/h4&gt; &lt;p&gt;&lt;a href=&quot;https://pandas.pydata.org/pandas-docs/stable/groupby.html&quot;&gt;Split-apply-combine&lt;/a&gt;过程会频繁出现在你的数据科学项目里，简而言之，该过程包括3个步骤:&lt;/p&gt; &lt;ol&gt; &lt;li&gt;把数据分组&lt;/li&gt; &lt;li&gt;对每个组应用函数&lt;/li&gt; &lt;li&gt;整合结果&lt;/li&gt; &lt;/ol&gt; &lt;p&gt;如下图所示，我们把数据分成3组，然后对每个组求均值，最后整合在一块就是一次 split-apply-combine。&lt;/p&gt; &lt;p&gt;&lt;img src=&quot;https://ws3.sinaimg.cn/large/006tNc79gy1fidfd575x7j30dw09ddgu.jpg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt; &lt;p&gt;我现在想知道：&lt;/p&gt; &lt;ul&gt; &lt;li&gt;每部电影的平均得分是多少？&lt;/li&gt; &lt;li&gt;平均得分最高多少？哪几部电影得分最高？&lt;/li&gt; &lt;li&gt;每位用户的平均打分是多少？&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;这就需要我把所有评分以 &lt;code class=&quot;highlighter-rouge&quot;&gt;movieId&lt;/code&gt; 区分，相同 &lt;code class=&quot;highlighter-rouge&quot;&gt;movieId&lt;/code&gt; 的取平均值后，得到新的表格。用户的平均打分的过程亦是如此，读者可自己尝试。&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-Python&quot;&gt;groupedRatingPerMovie = ratings['rating'].groupby(ratings['movieId']) # 注意不是 ratings.groupby('movieId') groupedRatingPerMovie.describe() &lt;/code&gt;&lt;/pre&gt; &lt;pre&gt;&lt;code class=&quot;language-Python&quot;&gt;ratingPerMovie = groupedRatingPerMovie.mean() # 计算平均值 maxRating = ratingPerMovie.max() # 得到电影平均分的最高值 maxRating # 输出 5.0 &lt;/code&gt;&lt;/pre&gt; &lt;pre&gt;&lt;code class=&quot;language-Python&quot;&gt;# 用布尔值选择数据 maxRatedMovieId = ratingPerMovie[ratingPerMovie == maxRating] maxRatedMovieTitle = movies[movies.index.isin(maxRatedMovieId.index)] # 得到最高分的电影名称 maxRatedMovieTitle['title'] # 输出 movieId 53 Lamerica (1994) 183 Mute Witness (1994) 301 Picture Bride (Bijo photo) (1994) 309 Red Firecracker, Green Firecracker (Pao Da Shu... ... 160590 Survive and Advance (2013) 161944 The Last Brickmaker in America (2001) 162542 Rustom (2016) 163949 The Beatles: Eight Days a Week - The Touring Y... Name: title, Length: 315, dtype: object &lt;/code&gt;&lt;/pre&gt; &lt;pre&gt;&lt;code class=&quot;language-Python&quot;&gt;# 得到最高分的电影有几次评分？ countPerMovie = groupedRatingPerMovie.count() maxRatedMovieCount = countPerMovie[countPerMovie.index.isin(maxRatedMovieId.index)] maxRatedMovieCount # 输出 movieId 53 1 183 1 301 1 309 3 .. 160590 1 161944 1 162542 1 163949 1 Name: rating, Length: 315, dtype: int64 &lt;/code&gt;&lt;/pre&gt; &lt;h4 id=&quot;函数&quot;&gt;函数&lt;/h4&gt; &lt;p&gt;有些操作比较复杂，可以用 &lt;code class=&quot;highlighter-rouge&quot;&gt;apply()&lt;/code&gt; 传入函数来操作数据。我想把 movies.csv 里的 genres 变成列表。&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-Python&quot;&gt;genreSplited = movies['genres'].apply(lambda x: x.split('|')) # 输出 movieId 1 [Adventure, Animation, Children, Comedy, Fantasy] 2 [Adventure, Children, Fantasy] 3 [Comedy, Romance] 4 [Comedy, Drama, Romance] ... 163056 [Action, Adventure, Fantasy, Sci-Fi] 163949 [Documentary] 164977 [Comedy] 164979 [Documentary] Name: genres, Length: 9125, dtype: object &lt;/code&gt;&lt;/pre&gt; &lt;p&gt;这里使用的 &lt;code class=&quot;highlighter-rouge&quot;&gt;lambda x: x.split('|')&lt;/code&gt; 是个 lambda 表达式，lambda 表达式就是不取名字、不可重复使用的函数，它等价于：&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-Python&quot;&gt;def someName(x): return x.split('|') &lt;/code&gt;&lt;/pre&gt; &lt;p&gt;以上就是 Pandas 的简单操作，第一次上手必然不熟悉，就像小学你刚接触乘法和乘法表一样，多多练习、熟能生巧。很多操作只要知道即可，用到的时候可以 Google 嘛。&lt;/p&gt; &lt;p&gt;以下是一些深入 Pandas 和其他数据科学工具的好书：&lt;/p&gt; &lt;p&gt;&lt;a href=&quot;https://book.douban.com/subject/25779298/&quot;&gt;Python for Data Analysis&lt;/a&gt;&lt;br /&gt; 作者就是创造 Pandas 的 Wes McKinney，介绍得非常仔细，但 2012 年出版，有点久远。&lt;/p&gt; &lt;p&gt;&lt;a href=&quot;https://nbviewer.jupyter.org/github/jakevdp/PythonDataScienceHandbook/blob/master/notebooks/Index.ipynb&quot;&gt;Python Data Science Handbook&lt;/a&gt;&lt;br /&gt; 与 Python for Data Analysis 内容差不多，但出版时间是 2016 年 11 月，非常新且作者把内容开源了。&lt;/p&gt; &lt;h2 id=&quot;作业&quot;&gt;作业&lt;/h2&gt; &lt;p&gt;&lt;a href=&quot;https://github.com/cs109/2015/blob/master/Lectures/02-DataScraping.ipynb&quot;&gt;CS109 Lecture Notes: DataScraping&lt;/a&gt;&lt;br /&gt; &lt;a href=&quot;https://github.com/DS-100/sp17/blob/master/materials/hw/hw2/hw2.ipynb&quot;&gt;DS100 Homework: Language in the 2016 Presidential Election&lt;/a&gt;&lt;/p&gt; &lt;h2 id=&quot;致谢&quot;&gt;致谢&lt;/h2&gt; &lt;p&gt;数据科学导论笔记基于加州大学伯克利校区 &lt;a href=&quot;http://www.ds100.org/sp17/syllabus&quot;&gt;DS100&lt;/a&gt; 与哈佛大学 &lt;a href=&quot;http://cs109.github.io/2015/pages/videos.html&quot;&gt;CS109&lt;/a&gt; 的课程主页改写，参考了课件、笔记、阅读材料及作业，感谢制作这两门课程的 Joe Blitzstein、Hanspeter Pfister、Verena Kaynig-Fittkau、Joseph E. Gonzalez、Joseph Hellerstein、Deborah Nolan 和 Bin Yu。本文基于 DS100 Week 2 - Data Wrangling，及 CS 109 的 Lecture 2 - Web Scraping, Regular Expressions, Data Reshaping, Data Cleanup, Pandas。&lt;/p&gt; </description><pubDate>Thu, 10 Aug 2017 15:20:00 +0100</pubDate><link>http://localhost:4000/posts/datawrangling/</link><guid isPermaLink="true">http://localhost:4000/posts/datawrangling/</guid> </item> </channel> </rss>
