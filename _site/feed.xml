<?xml version="1.0" encoding="UTF-8"?> <rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"> <channel><title>游戏暂停</title><description>李家伟记录自己的博客。</description><link>/iewaij.github.iohttp://localhost:4000</link><atom:link href="/iewaij.github.iohttp://localhost:4000/feed.xml" rel="self" type="application/rss+xml" /> <item><title>机器如何判断句子的情绪？</title><description>&lt;ul id=&quot;markdown-toc&quot;&gt; &lt;li&gt;&lt;a href=&quot;#以后的文章就用-latex-写公式啦&quot; id=&quot;markdown-toc-以后的文章就用-latex-写公式啦&quot;&gt;以后的文章就用 LaTex 写公式啦&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;博文内容和 Markdown 语法有冲突，请移步至我的 &lt;a href=&quot;https://github.com/iewaij/machine-learning-lab/blob/master/Naive_Bayes/note/Naive_Emo_Bayes_Notes.ipynb&quot;&gt;GitHub 笔记&lt;/a&gt;和&lt;a href=&quot;https://github.com/iewaij/machine-learning-lab/blob/master/Naive_Bayes/code/Naive_Emo_Bayes.ipynb&quot;&gt;代码&lt;/a&gt;，多谢包涵！&lt;/p&gt; &lt;h2 id=&quot;以后的文章就用-latex-写公式啦&quot;&gt;以后的文章就用 LaTex 写公式啦&lt;/h2&gt; &lt;p&gt;用 MathJax 渲染，效果如下：&lt;/p&gt; &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$$E=mc^2$$ is a inline formula &lt;/code&gt;&lt;/pre&gt; &lt;/div&gt; &lt;p&gt;&lt;script type=&quot;math/tex&quot;&gt;E=mc^2&lt;/script&gt; is a inline formula&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-LaTex&quot;&gt;$$e^x=\sum_{i=0}^\infty \frac{1}{i!}x^i$$ &lt;/code&gt;&lt;/pre&gt; &lt;script type=&quot;math/tex; mode=display&quot;&gt;e^x=\sum_{i=0}^\infty \frac{1}{i!}x^i&lt;/script&gt; </description><pubDate>Mon, 20 Mar 2017 01:18:00 +0800</pubDate><link>http://localhost:4000/iewaij.github.io/2017/03/20/naive-emo-bayes/</link><guid isPermaLink="true">http://localhost:4000/iewaij.github.io/2017/03/20/naive-emo-bayes/</guid> </item> <item><title>我为什么做螺丝起子？</title><description>&lt;ul id=&quot;markdown-toc&quot;&gt; &lt;li&gt;&lt;a href=&quot;#8&quot; id=&quot;markdown-toc-8&quot;&gt;8%&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;#逃离机器&quot; id=&quot;markdown-toc-逃离机器&quot;&gt;逃离机器&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;#螺丝起子&quot; id=&quot;markdown-toc-螺丝起子&quot;&gt;螺丝起子&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;h2 id=&quot;8&quot;&gt;8%&lt;/h2&gt; &lt;p&gt;我一直在困惑一个问题：为什么我总碰不到别人口中的「宁诺那个有趣的人」？&lt;/p&gt; &lt;p&gt;可能是长得太丑交际圈太窄，我看到的，是每个人在焦虑地重复。从 I-Week 开始，学长学姐就开始讲大一加入社团组织，大二要好好学习争取交换，然后大三大四找实习找工作申研。&lt;/p&gt; &lt;p&gt;这很奇怪，这种奇怪我从初中开始就有体会，但好像所有人都默认这是对的。我看到身边的人一波波地去「学」雅思，不是学英语，是学习怎么精通一门考试，然后用这门考试的成绩证明自己的英语好。&lt;/p&gt; &lt;p&gt;我还看到，这个国家的所有人，为了一次考试，会花上三年时间重复地翻阅同一本课本，为一个知识点做三年的题目，然后为更好看的数字争得头破血流，不惜浪费自己的时间。&lt;/p&gt; &lt;p&gt;我看到的还有，在通过了这些考试后，人生失去方向，只能去重复别人的活动，沉陷在自我意淫里的人。&lt;/p&gt; &lt;p&gt;如果我在街上找一个人，问：「你想做什么？」，会有90%的人说：「我不知道。」如果再追问一下，通常回答是「吃」、「睡觉」。我一点也不反对虚无主义，只是在人生滑向深渊之前，你真的不想找点你愿意做一辈子的事情吗？&lt;/p&gt; &lt;p&gt;我很喜欢和人讲贝叶斯推断。现在我们假设全国只有宁波诺丁汉一所大学，2016年有1000人参加高考，这一千人里，有99%的人是普通人，1%的人是可塑之才，普通人有10%的可能性通过高考，可塑之才有90%的可能性通过高考，那么，2016年诺丁汉校园的新生里，普通人占比是多少？答案是92%。简单的计算，990人是普通人，其中99人进入宁诺，10个人可塑之，其中9个进入诺丁汉，99/(99+9)=91.67%。即便是高考再公平，筛选机制再合理，环境里的大多数人也永远占大多数，少数派永远是少数。&lt;/p&gt; &lt;p&gt;宁诺有趣的人再多，也只是8%。&lt;/p&gt; &lt;h2 id=&quot;逃离机器&quot;&gt;逃离机器&lt;/h2&gt; &lt;p&gt;这8%的有趣的人会最终成为有趣的人吗？我的看法是，不会。这8%的人会被周围的环境同化，最后成为机器中的一员。在重复别人的活动中匆匆忙忙，然后完全忘记自己的存在。&lt;/p&gt; &lt;p&gt;现在我来解释一下为什么我如此讨厌重复。因为重复的活动是给机器干的，而人之所以不是机器，在于人会创造不存在的模式，并在创造的过程中获得狂喜，心理学称这种狂喜是「心流」，是感觉时间不存在的精神状态。尼采说：「真正的自我并非某种存在于那里可以被找到或被发现的东西，而是某种必须被创造的东西」，我们真正的自我不是模仿别人就找到了，是创造属于自己的一些东西。&lt;/p&gt; &lt;p&gt;当一个人选择了不模仿别人，而是创造自己的生存状态，并获得狂喜时，他真正地逃离了机器，成为了人。&lt;/p&gt; &lt;h2 id=&quot;螺丝起子&quot;&gt;螺丝起子&lt;/h2&gt; &lt;p&gt;我讨厌充斥校园的如焦油般的「焦虑感」。这种氛围让我必须做一次某活动才叫「青春」，不参加某项目就是人生损失，必须把时间花在有价值的「学业」、「实习」上。「均分高」、「拿到名校offer」可以吹一年，羡煞身边人，这些被鼓舞的人便不顾一切地重复着他的一切，忘掉了真正重要的东西，「创造你自己的模式」。&lt;/p&gt; &lt;p&gt;我发自内心地欣赏「创造者的生存状态」。3Blue1Brown 是一位在 YouTube 上用动画讲数学本质的作者，10分钟的视频清晰地讲清概念背后的数学本质，他的作品让我五体投地。Chinese Football 的成员平时上班，周末做演出和排练，他们的作品是国内最棒的情绪摇滚。《离线》是个传播科技文化背后人性的独立杂志，讨论上至库兹韦尔奇点理论下至纳博科夫卡片式创作，他们还做了个探索创造者和他们使用的工具的网站，利器。&lt;/p&gt; &lt;p&gt;我和你一样曾是机器的一员，高中的压力让我不知所措，我只是机械做题的普通人，到了大学后我才真正地「挣脱」，这期间伴随着孤独、迷茫、焦虑，但现在我可以很坦然地说，我是一名创造者。我喜欢拆解奥秘，好奇世界本质，在这过程中依靠自学和与别人聊天，创造了许许多多奇怪的项目。我自学了设计和编程，然后搭建了自己的博客「游戏暂停」和一个 LGBT 文化社区 Bear.cafe，现在我还在探索「基于线下场景的二维码」、「人格经历溯源」等一系列项目。我了解一个迷茫的人挣脱痛苦的过程，于是我又做了螺丝起子，螺丝起子想拉你一把，和你一起逃离机器。&lt;/p&gt; &lt;p&gt;你可能不知道如何行动，螺丝起子会在时长一个月的课程中讨论理解世界的「思维模式」以指导你采取行动，同时我们邀请了校园里各个有趣的「创造者」激发你的灵感。&lt;/p&gt; &lt;p&gt;你可能没有行动的资源，你在螺丝起子毕业后可以创造自己的项目，我们会为你配对有经验的合伙人，并且在下学期开学后举行路演，你的项目极有可能被宁波诺丁汉创行或者捕手计划投资，持续地支持你的项目运行。&lt;/p&gt; &lt;p&gt;你可能缺少同伴，在螺丝起子里你会碰到形形色色的人，我们鼓励平等、异想天开的沟通，并举行定期的活动让最微小的创意也有机会表达，你可以在某次课程时和你旁边的人讨论你的想法，得到反馈甚至找到项目合伙人。&lt;/p&gt; &lt;p&gt;我们的第0期课程在本周五，17日，TB405。第0期的嘉宾是傅元哲，「哲说」创始人。第0期是引导课，我们会说明什么是「思维模式」并且与大家一起开脑洞，思考螺丝起子的未来。&lt;/p&gt; </description><pubDate>Thu, 16 Mar 2017 23:47:00 +0800</pubDate><link>http://localhost:4000/iewaij.github.io/2017/03/16/why-screwdriver/</link><guid isPermaLink="true">http://localhost:4000/iewaij.github.io/2017/03/16/why-screwdriver/</guid> </item> <item><title>使用概率让机器学会语言生成</title><description>&lt;ul id=&quot;markdown-toc&quot;&gt; &lt;li&gt;&lt;a href=&quot;#句子的概率&quot; id=&quot;markdown-toc-句子的概率&quot;&gt;句子的概率&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;#蒙特卡洛方法&quot; id=&quot;markdown-toc-蒙特卡洛方法&quot;&gt;蒙特卡洛方法&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;#马尔科夫假设与-n-gram-模型&quot; id=&quot;markdown-toc-马尔科夫假设与-n-gram-模型&quot;&gt;马尔科夫假设与 N-gram 模型&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;#collections-与-random-模块用法&quot; id=&quot;markdown-toc-collections-与-random-模块用法&quot;&gt;collections 与 random 模块用法&lt;/a&gt; &lt;ul&gt; &lt;li&gt;&lt;a href=&quot;#counter&quot; id=&quot;markdown-toc-counter&quot;&gt;Counter&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;#defaultdict&quot; id=&quot;markdown-toc-defaultdict&quot;&gt;defaultdict&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;#random&quot; id=&quot;markdown-toc-random&quot;&gt;random&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;/li&gt; &lt;li&gt;&lt;a href=&quot;#python-实现&quot; id=&quot;markdown-toc-python-实现&quot;&gt;Python 实现&lt;/a&gt; &lt;ul&gt; &lt;li&gt;&lt;a href=&quot;#概率计算&quot; id=&quot;markdown-toc-概率计算&quot;&gt;概率计算&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;#句子生成&quot; id=&quot;markdown-toc-句子生成&quot;&gt;句子生成&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;/li&gt; &lt;/ul&gt; &lt;h2 id=&quot;句子的概率&quot;&gt;句子的概率&lt;/h2&gt; &lt;p&gt;句子对不对和语法语义都无关，而是和句子出现的概率有关。&lt;/p&gt; &lt;h2 id=&quot;蒙特卡洛方法&quot;&gt;蒙特卡洛方法&lt;/h2&gt; &lt;p&gt;生成随机数，概率越大的越容易被随机数「抽」到。&lt;/p&gt; &lt;h2 id=&quot;马尔科夫假设与-n-gram-模型&quot;&gt;马尔科夫假设与 N-gram 模型&lt;/h2&gt; &lt;p&gt;用条件概率推测词的概率。&lt;/p&gt; &lt;h2 id=&quot;collections-与-random-模块用法&quot;&gt;collections 与 random 模块用法&lt;/h2&gt; &lt;h3 id=&quot;counter&quot;&gt;Counter&lt;/h3&gt; &lt;p&gt;计数。&lt;/p&gt; &lt;h3 id=&quot;defaultdict&quot;&gt;defaultdict&lt;/h3&gt; &lt;p&gt;如果 key 不存在，自动生成 key。&lt;/p&gt; &lt;h3 id=&quot;random&quot;&gt;random&lt;/h3&gt; &lt;p&gt;抛出随机数。&lt;/p&gt; &lt;h2 id=&quot;python-实现&quot;&gt;Python 实现&lt;/h2&gt; &lt;h3 id=&quot;概率计算&quot;&gt;概率计算&lt;/h3&gt; &lt;ul&gt; &lt;li&gt;使用结巴分词配合 defaultdict() 得到 key 为条件，value 为词 list 的词典。&lt;/li&gt; &lt;/ul&gt; &lt;h3 id=&quot;句子生成&quot;&gt;句子生成&lt;/h3&gt; &lt;ul&gt; &lt;li&gt;w1, w2 可人工填入，或者用随机方法生成。&lt;/li&gt; &lt;li&gt;在 w1, w2 的条件下，在字典里查找 key 为 w1, w2 的情况，用 randomint () 抽出 w3。&lt;/li&gt; &lt;li&gt;在 w2, w3 的条件下，生成 w4。&lt;/li&gt; &lt;li&gt;……&lt;/li&gt; &lt;/ul&gt; </description><pubDate>Tue, 14 Mar 2017 01:49:00 +0800</pubDate><link>http://localhost:4000/iewaij.github.io/2017/03/14/N-gram/</link><guid isPermaLink="true">http://localhost:4000/iewaij.github.io/2017/03/14/N-gram/</guid> </item> <item><title>Docker + TensorFlow 入门</title><description>&lt;ul id=&quot;markdown-toc&quot;&gt; &lt;li&gt;&lt;a href=&quot;#镜像和容器&quot; id=&quot;markdown-toc-镜像和容器&quot;&gt;镜像和容器&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;#上手&quot; id=&quot;markdown-toc-上手&quot;&gt;上手&lt;/a&gt; &lt;ul&gt; &lt;li&gt;&lt;a href=&quot;#homebrew-安装-docker&quot; id=&quot;markdown-toc-homebrew-安装-docker&quot;&gt;Homebrew 安装 Docker&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;#docker-加速器设置&quot; id=&quot;markdown-toc-docker-加速器设置&quot;&gt;Docker 加速器设置&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;#tensorflow-镜像安装&quot; id=&quot;markdown-toc-tensorflow-镜像安装&quot;&gt;TensorFlow 镜像安装&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;#docker-关键命令&quot; id=&quot;markdown-toc-docker-关键命令&quot;&gt;Docker 关键命令&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;/li&gt; &lt;li&gt;&lt;a href=&quot;#让容器与本机的文件夹同步&quot; id=&quot;markdown-toc-让容器与本机的文件夹同步&quot;&gt;让容器与本机的文件夹同步&lt;/a&gt; &lt;ul&gt; &lt;li&gt;&lt;a href=&quot;#jupyter-notebook-主题更改&quot; id=&quot;markdown-toc-jupyter-notebook-主题更改&quot;&gt;Jupyter Notebook 主题更改&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;/li&gt; &lt;/ul&gt; &lt;p&gt;Docker 是个非常轻量级的虚拟机，可以保证环境不影响代码的运行。&lt;/p&gt; &lt;p&gt;TensorFlow 官方在 Docker 上有镜像，可以直接下载。这几天研究了一点 Docker，感觉只看懂了一小角，也不知道对不对，就斗胆先写一些了。&lt;/p&gt; &lt;h2 id=&quot;镜像和容器&quot;&gt;镜像和容器&lt;/h2&gt; &lt;p&gt;Docker Hub 上可以得到各种来源的镜像，这个镜像就像以前装系统的光盘或者 .iso，装载了这个系统最初始的状态。&lt;/p&gt; &lt;p&gt;Docker 可以帮助我们把这个镜像安装，变成我们可以使用的容器，在这个容器里随便折腾，折腾完了可以删掉，再从镜像新建一个新容器，这样可以保证以前的折腾不会影响现在的代码，队友的环境也可以和自己保持一致。&lt;/p&gt; &lt;h2 id=&quot;上手&quot;&gt;上手&lt;/h2&gt; &lt;p&gt;本文以 Mac 为例，介绍如何上手 Docker。&lt;/p&gt; &lt;h3 id=&quot;homebrew-安装-docker&quot;&gt;Homebrew 安装 Docker&lt;/h3&gt; &lt;p&gt;如果有 homebrew，直接运行代码 &lt;code class=&quot;highlighter-rouge&quot;&gt;brew cask install docker&lt;/code&gt; 即可安装 Docker，启动 Docker 后，Menu Bar 上会出现一只鲸鱼，也不是很明白鲸鱼和虚拟机有什么关系。&lt;/p&gt; &lt;h3 id=&quot;docker-加速器设置&quot;&gt;Docker 加速器设置&lt;/h3&gt; &lt;p&gt;因为国内的垃圾网络，最好装加速器来减少下载镜像的等待时间，我用了号称永久免费的 &lt;a href=&quot;https://www.daocloud.io/&quot;&gt;DaoCloud&lt;/a&gt;，在得到镜像地址后，在 Docker 中如图所示设置。&lt;/p&gt; &lt;p&gt;&lt;img src=&quot;http://lijiawei.cc/images/屏幕快照 2017-03-05 下午2.57.26.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt; &lt;h3 id=&quot;tensorflow-镜像安装&quot;&gt;TensorFlow 镜像安装&lt;/h3&gt; &lt;p&gt;启动 Docker，然后终端运行以下命令，即可从 Docker Hub 上下载 TensorFlow 镜像。&lt;/p&gt; &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;docker run -it -p 8888:8888 tensorflow/tensorflow &lt;/code&gt;&lt;/pre&gt; &lt;/div&gt; &lt;p&gt;如果你想要和你的容器共享文件，那么最好用这个命令：&lt;/p&gt; &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;docker run -it -p 8888:8888 -v ~/pathe/to/folder/you/wannna/share:/portal tensorflow/tensorflow &lt;/code&gt;&lt;/pre&gt; &lt;/div&gt; &lt;p&gt;从你的容器访问 &lt;code class=&quot;highlighter-rouge&quot;&gt;/portal&lt;/code&gt; 文件夹，就是你电脑上的 &lt;code class=&quot;highlighter-rouge&quot;&gt;~/pathe/to/folder/you/wannna/share&lt;/code&gt; 文件夹。&lt;code class=&quot;highlighter-rouge&quot;&gt;/portal&lt;/code&gt; 这个名字可以随便改，不过我觉得叫 &lt;code class=&quot;highlighter-rouge&quot;&gt;/portal&lt;/code&gt; 还蛮酷的。&lt;/p&gt; &lt;p&gt;如果一切顺利的话，你就可以打开终端的链接，从浏览器访问 Jupyter Notebook 了。&lt;/p&gt; &lt;h3 id=&quot;docker-关键命令&quot;&gt;Docker 关键命令&lt;/h3&gt; &lt;p&gt;使用 &lt;code class=&quot;highlighter-rouge&quot;&gt;docker images&lt;/code&gt; 查看装了哪些镜像：&lt;/p&gt; &lt;p&gt;&lt;img src=&quot;http://lijiawei.cc/images/屏幕快照 2017-03-05 下午3.05.15.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt; &lt;p&gt;使用 &lt;code class=&quot;highlighter-rouge&quot;&gt;docker rmi &amp;lt;image name or tag or ID whatever&amp;gt;&lt;/code&gt; 可以删除镜像。&lt;/p&gt; &lt;p&gt;使用 &lt;code class=&quot;highlighter-rouge&quot;&gt;docker ps&lt;/code&gt; 查看正在运行的容器（图中没有正在运行的容器）：&lt;/p&gt; &lt;p&gt;&lt;img src=&quot;http://lijiawei.cc/images/屏幕快照 2017-03-05 下午3.07.15.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt; &lt;p&gt;使用 &lt;code class=&quot;highlighter-rouge&quot;&gt;docker ps -a&lt;/code&gt; 查看所有的容器：&lt;/p&gt; &lt;p&gt;&lt;img src=&quot;http://lijiawei.cc/images/屏幕快照 2017-03-05 下午3.08.37.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt; &lt;p&gt;使用 &lt;code class=&quot;highlighter-rouge&quot;&gt;docker rm &amp;lt;container name or tag or ID whatever&amp;gt;&lt;/code&gt; 可以删除容器。&lt;/p&gt; &lt;p&gt;如果觉得一个一个删太烦，运行 &lt;code class=&quot;highlighter-rouge&quot;&gt;docker rm $(docker ps -a -q)&lt;/code&gt;删除所有容器。&lt;/p&gt; &lt;p&gt;若要停止容器（比如端口被占），运行 &lt;code class=&quot;highlighter-rouge&quot;&gt;docker stop &amp;lt;container name or tag or ID whatever&amp;gt;&lt;/code&gt;。启动容器运行 &lt;code class=&quot;highlighter-rouge&quot;&gt;docker start &amp;lt;container name or tag or ID whatever&amp;gt;&lt;/code&gt;。&lt;/p&gt; &lt;p&gt;好的，现在到关键部分了！当我创建了一个 TensorFlow 容器后，我该怎么开始运行 Jupyter Notebook 呢？运行&lt;code class=&quot;highlighter-rouge&quot;&gt;docker start -i &amp;lt;container name or tag or ID whatever&amp;gt;&lt;/code&gt; 就可以了！&lt;/p&gt; &lt;p&gt;在 notebook 里测试一下 &lt;code class=&quot;highlighter-rouge&quot;&gt;/portal&lt;/code&gt; 是否正常，可以运行：&lt;/p&gt; &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;!ls /portal/ &lt;/code&gt;&lt;/pre&gt; &lt;/div&gt; &lt;p&gt;如果你和一样用的是 oh-my-zsh，你可以在 zshconfig 里加上这两个 alias 方便以后使用：&lt;/p&gt; &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;# 新建容器并从 /portal 传输文件 alias tfdocker=&quot;docker run -it -p 8888:8888 -v ~/Coding/DeepLearning101:/portal tensorflow/tensorflow&quot; # 启动 ID 为 a4032edb39cb 的容器并开启 Jupyter Notebook alias startdocker=&quot;docker start -i a4032edb39cb&quot; &lt;/code&gt;&lt;/pre&gt; &lt;/div&gt; &lt;h1 id=&quot;让容器与本机的文件夹同步&quot;&gt;让容器与本机的文件夹同步&lt;/h1&gt; &lt;p&gt;参考&lt;a href=&quot;https://github.com/junjielizero/DeepLearning101/blob/master/ch0/note/README.md&quot;&gt;junjielizero 的笔记&lt;/a&gt;，运行下列命令，可以创建于本机文件夹同步的笔记。&lt;/p&gt; &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;docker run -it -p 8888:8888 -v ~/Coding/DeepLearning101:/Coding/DeepLearning101 -w /Coding/DeepLearning101 tensorflow/tensorflow &lt;/code&gt;&lt;/pre&gt; &lt;/div&gt; &lt;h2 id=&quot;jupyter-notebook-主题更改&quot;&gt;Jupyter Notebook 主题更改&lt;/h2&gt; &lt;p&gt;用了新编辑器怎么可以不换主题，在 Jupyter Notebook 中，以感叹号开头运行命令就是终端指令。在 notebook 中运行：&lt;/p&gt; &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;!pip install --upgrade jupyterthemes &lt;/code&gt;&lt;/pre&gt; &lt;/div&gt; &lt;p&gt;如果一切顺利（在中国的垃圾网络下怎么可能顺利，你可能要多试几次），你就可以参考&lt;a href=&quot;https://github.com/dunovank/jupyter-themes&quot;&gt;GitHub - dunovank/jupyter-themes 文档&lt;/a&gt; 做主题调整了。我输入的命令是：&lt;/p&gt; &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;# 用 solarized-light 主题，代码字体是 inputmono，字号 12 点，界面字体 sourcesans，输出字体 sourcesans，开启工具栏，开启标题栏 !jt -t solarized-light -f inputmono -fs 12 -nf sourcesans -tf sourcesans -T -N &lt;/code&gt;&lt;/pre&gt; &lt;/div&gt; &lt;p&gt;结果如图：&lt;/p&gt; &lt;p&gt;&lt;img src=&quot;https://ww4.sinaimg.cn/large/006tKfTcgy1fdc04dobmyj30se0oyaec.jpg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt; </description><pubDate>Sun, 05 Mar 2017 15:32:00 +0800</pubDate><link>http://localhost:4000/iewaij.github.io/2017/03/05/Docker-TensorFlow/</link><guid isPermaLink="true">http://localhost:4000/iewaij.github.io/2017/03/05/Docker-TensorFlow/</guid> </item> <item><title>微积分和统计自学指引</title><description>&lt;ul id=&quot;markdown-toc&quot;&gt; &lt;li&gt;&lt;a href=&quot;#微积分&quot; id=&quot;markdown-toc-微积分&quot;&gt;微积分&lt;/a&gt; &lt;ul&gt; &lt;li&gt;&lt;a href=&quot;#单变量和多变量微积分&quot; id=&quot;markdown-toc-单变量和多变量微积分&quot;&gt;单变量和多变量微积分&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;#泰勒展开&quot; id=&quot;markdown-toc-泰勒展开&quot;&gt;泰勒展开&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;#如果你需要一本教科书&quot; id=&quot;markdown-toc-如果你需要一本教科书&quot;&gt;如果你需要一本教科书&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;/li&gt; &lt;li&gt;&lt;a href=&quot;#统计&quot; id=&quot;markdown-toc-统计&quot;&gt;统计&lt;/a&gt; &lt;ul&gt; &lt;li&gt;&lt;a href=&quot;#编程相关&quot; id=&quot;markdown-toc-编程相关&quot;&gt;编程相关&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;#无编程背景&quot; id=&quot;markdown-toc-无编程背景&quot;&gt;无编程背景&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;/li&gt; &lt;li&gt;&lt;a href=&quot;#最后警告&quot; id=&quot;markdown-toc-最后警告&quot;&gt;最后警告&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;大家今天上完 Paolo 的 QM 感觉酸爽吗？&lt;/p&gt; &lt;p&gt;我在看完这门课给出的课件后倒吸一口凉气，把大学半学期的微分课程压缩到4小时讲完，lecture 上 Paolo 给出的 module outline 也不知道大家有没有什么概念，单变量和多变量微分、优化、概率论、统计齐了，虽然没有线性代数和积分，但在我看来这样的安排已经够恐怖。&lt;/p&gt; &lt;p&gt;如果你学过高中导数和概率，那么微分 Lecture 1 和大部分概率论应该没什么特别大的问题（只要你没忘），提前浏览课件，自己证明一下，然后把不会的标注出来或者自己 Google。&lt;/p&gt; &lt;p&gt;当然，不管你高中的基础如何，第一周 lecture 后应该还是要跪，这门课太紧凑了，5分钟给完证明然后接下来5分钟就讲推论，证明的解释有多反人类我就不说了，证明过程也不给多少时间思考，证明完也不练习，安排太不合理了，大家期末写 feedback 的时候提一下吧。&lt;/p&gt; &lt;p&gt;鄙人因为酷爱写代码在大二上学期的时候自学了微积分（上完第一节课已经默默开始自学统计学了），就不识好歹地在这里写个自学指引（优化我还没接触，就不放了），让我们一起开开心心地被数学和 Paolo 虐。&lt;/p&gt; &lt;h2 id=&quot;微积分&quot;&gt;微积分&lt;/h2&gt; &lt;p&gt;最好的学习方式是公开课，我不太建议看书，因为公开课是用动画、板书配合讲师讲解，理解效率会比较高。教科书给出的证明更适合已经入门的人，也更加严谨，我一般想不起来证明的时候才会翻书。&lt;/p&gt; &lt;h3 id=&quot;单变量和多变量微积分&quot;&gt;单变量和多变量微积分&lt;/h3&gt; &lt;p&gt;&lt;a href=&quot;https://courses.edx.org/courses/MITx/18.01.1x/2T2015/info&quot;&gt;MIT: 18.01.1x Calculus 1A: Differentiation&lt;/a&gt;&lt;/p&gt; &lt;p&gt;&lt;img src=&quot;http://lijiawei.cc/images/edx-mit-calculus.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt; &lt;p&gt;这门课只有4单元，一个单元接近2小时，讲得太好了，基于直觉，引人入胜。把微分讲得透透的，每一步都有严谨有趣的证明，甚至包括 e^x 的导数为什么是它本身，还讲了多变量微分中的 implicit differentiation 和一点点微分方程。&lt;/p&gt; &lt;h3 id=&quot;泰勒展开&quot;&gt;泰勒展开&lt;/h3&gt; &lt;p&gt;泰勒展开可以把任意函数用多项式表示，比如三角函数 sin(x) 的展开就是这样：&lt;/p&gt; &lt;p&gt;&lt;img src=&quot;http://lijiawei.cc/images/sinx.svg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt; &lt;p&gt;数学家之所以发明了这个方法，是因为研究多项式能大大简化工作。&lt;/p&gt; &lt;p&gt;&lt;a href=&quot;https://www.coursera.org/learn/single-variable-calculus/home&quot;&gt;单变量微积分：第一部分&lt;/a&gt;&lt;/p&gt; &lt;p&gt;这门课虽然也是微积分导论课，但直接从泰勒展开切入，视角独特，但不是很出于直觉，整个推导都是基于欧拉公式。&lt;/p&gt; &lt;p&gt;&lt;a href=&quot;https://courses.edx.org/courses/MITx/18.01.3x/1T2016/info&quot;&gt;MIT: 18.01.3x Calculus 1C: Coordinate systems and infinite series&lt;/a&gt;&lt;/p&gt; &lt;p&gt;是 MIT 单变量微积分第三部分的课，我没上过就不评论了。&lt;/p&gt; &lt;h3 id=&quot;如果你需要一本教科书&quot;&gt;如果你需要一本教科书&lt;/h3&gt; &lt;p&gt;知乎上有蛮多推荐的，大家还是找最适合自己的，比如你觉得北大的数学分析简洁干净习题难那我也觉得蛮好的。&lt;/p&gt; &lt;p&gt;&lt;a href=&quot;https://book.douban.com/subject/4926707/&quot;&gt;普林斯顿微积分读本&lt;/a&gt;&lt;/p&gt; &lt;p&gt;好书，哪怕你没有三角函数的基础（或者基础忘光了），你也可以入门，里面包含了泰勒级数的内容，如果你觉得实在没时间看公开课的话，用这本学也不是不可以。&lt;/p&gt; &lt;p&gt;Calculus by Ron Larson, Bruce H. Edwards&lt;/p&gt; &lt;p&gt;在 &lt;a href=&quot;https://www.zhihu.com/question/32729130&quot;&gt;知乎&lt;/a&gt; 上被赞誉为「被多数学生评为最适合自学的微积分教材」，我的感觉是&lt;del&gt;图片还是蛮多的&lt;/del&gt;字体舒服阅读体验好，不过大部分英文原版教材都不错啦，大家去图书馆随便借本也够用的。&lt;/p&gt; &lt;h2 id=&quot;统计&quot;&gt;统计&lt;/h2&gt; &lt;h3 id=&quot;编程相关&quot;&gt;编程相关&lt;/h3&gt; &lt;p&gt;如果你有编程基础或者学习一点点编程（R 语言编程非常简单我保证），&lt;a href=&quot;https://courses.edx.org/courses/course-v1:UTAustinX+UT.7.11x+3T2016/info&quot;&gt;UTAustinX: UT.7.11x Foundations of Data Analysis - Part 1&lt;/a&gt; 和 &lt;a href=&quot;https://courses.edx.org/courses/course-v1:UTAustinX+UT.7.21x+3T2016/info&quot;&gt;UTAustinX: UT.7.11x Foundations of Data Analysis - Part 2&lt;/a&gt; 是评价最好的，20小时的内容包含了统计和 R 语言入门，Lab 体验超棒。&lt;/p&gt; &lt;p&gt;如果你更喜欢用 Python，那么还有 &lt;a href=&quot;https://www.edx.org/course/computational-probability-inference-mitx-6-008-1x&quot;&gt;MIT: Computational Probability and Inference&lt;/a&gt;。&lt;/p&gt; &lt;h3 id=&quot;无编程背景&quot;&gt;无编程背景&lt;/h3&gt; &lt;p&gt;斯坦福公开课 &lt;a href=&quot;https://lagunita.stanford.edu/courses/OLI/ProbStat/Open/about&quot;&gt;Probability and Statistics&lt;/a&gt;，课程内容不错，体验也不错，如果不想编程的话可以试试。&lt;/p&gt; &lt;p&gt;&lt;a href=&quot;https://courses.edx.org/courses/NotreDameX/SOC120x/2T2015/info&quot;&gt;NotreDameX: SOC120x I Heart Stats: Learning to Love Statistics&lt;/a&gt;，看名字似乎比较适合入门，但没有概率论的内容。&lt;/p&gt; &lt;p&gt;如果你想更深入的学习概率论的话，试试 MIT 的 &lt;a href=&quot;https://www.edx.org/course/introduction-probability-science-mitx-6-041x-2&quot;&gt;Introduction to Probability - The Science of Uncertainty&lt;/a&gt; ， &lt;a href=&quot;https://medium.freecodecamp.com/if-you-want-to-learn-data-science-take-a-few-of-these-statistics-classes-9bbabab098b9#.yxn77f7b5&quot;&gt;有博文&lt;/a&gt;评价此门课程「It is a masterpiece with a weighted average rating of 4.91 out of 5 stars over 34 reviews. Be warned: it is a challenge and much longer than most MOOCs」。&lt;/p&gt; &lt;h2 id=&quot;最后警告&quot;&gt;最后警告&lt;/h2&gt; &lt;p&gt;如果你是高中理科基础，那么自学 QM 至少得花60小时以上，先花一周搞定较简单的微积分，然后再按照 QM 课程安排规律地学习泰勒级数、概率和统计。&lt;/p&gt; </description><pubDate>Thu, 23 Feb 2017 22:06:00 +0800</pubDate><link>http://localhost:4000/iewaij.github.io/2017/02/23/QM-self-study/</link><guid isPermaLink="true">http://localhost:4000/iewaij.github.io/2017/02/23/QM-self-study/</guid> </item> <item><title>用树莓派实现 HomeKit 控制台灯</title><description>&lt;ul id=&quot;markdown-toc&quot;&gt; &lt;li&gt;&lt;a href=&quot;#配置树莓派&quot; id=&quot;markdown-toc-配置树莓派&quot;&gt;配置树莓派&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;#更换国内镜像源&quot; id=&quot;markdown-toc-更换国内镜像源&quot;&gt;更换国内镜像源&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;#安装-nodejs-及相关依赖&quot; id=&quot;markdown-toc-安装-nodejs-及相关依赖&quot;&gt;安装 Node.js 及相关依赖&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;#安装-homebridge-及相关依赖&quot; id=&quot;markdown-toc-安装-homebridge-及相关依赖&quot;&gt;安装 homebridge 及相关依赖&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;#安装-homebridge-yeelight&quot; id=&quot;markdown-toc-安装-homebridge-yeelight&quot;&gt;安装 homebridge-yeelight&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;#开机启动&quot; id=&quot;markdown-toc-开机启动&quot;&gt;开机启动&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;#参考资料&quot; id=&quot;markdown-toc-参考资料&quot;&gt;参考资料&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;在看到少数派上的 &lt;a href=&quot;http://sspai.com/36617&quot;&gt;借助树莓派与 HomeBridge ，将 YeeLight 彩光灯接入 Apple HomeKit&lt;/a&gt; 一文后, 非常心动. 在暑假的时候关注过一阵子 yeelight, 那时实现的功能非常有限还不支持 IFTTT 就作罢没有买, 但到了12月后, yeelight 既有 IFTTT 又能玩 homekit, 于是立马下单了树莓派 3 和 yeelight.&lt;/p&gt; &lt;p&gt;树莓派可以理解为一台微型电脑 (开发板), 运行的是树莓派定制的 Rapbian, 虽然树莓派并不是性能最强也不是最有性价比的开发板, 但它的社区支持是最友好的 (毕竟面向的人群还包括儿童), 它出的杂志 MagPi 极度令人沉迷 (甚至能让我回忆起从前看大众软件的时光), 官方的教程和文档对新手非常友好 (只需要一点点英语基础就够), 作为对比让我们斜眼一下 &lt;a href=&quot;https://developer.qualcomm.com/hardware/dragonboard-410c/tutorial-videos&quot;&gt;DragonBoard 410c&lt;/a&gt;, 任何出现的问题只要 Google 一下 Raspberry Pi + 关键词都能找到, 其配套的硬件软件也很出色, 例如 sense hat 可以直接配合自带的 sense hat emulator. 因此非常推荐任何对编程感兴趣的人入手.&lt;/p&gt; &lt;p&gt;本文用到的硬件如下:&lt;/p&gt; &lt;ol&gt; &lt;li&gt;宜家 E27 螺孔台灯 RMB 99&lt;/li&gt; &lt;li&gt;yeelight 彩光版 RMB 89&lt;/li&gt; &lt;li&gt;树莓派 3 Model B (同时配了外壳和散热片) RMB 206&lt;/li&gt; &lt;li&gt;预先烧录好 NOOBS 的 Micro SD 卡&lt;/li&gt; &lt;li&gt;网线&lt;/li&gt; &lt;li&gt;有线鼠标&lt;/li&gt; &lt;li&gt;戴尔显示器&lt;/li&gt; &lt;li&gt;Macbook Pro&lt;/li&gt; &lt;li&gt;iPhone&lt;/li&gt; &lt;/ol&gt; &lt;h2 id=&quot;配置树莓派&quot;&gt;配置树莓派&lt;/h2&gt; &lt;p&gt;参考官方指南 &lt;a href=&quot;https://www.raspberrypi.org/learning/software-guide/&quot;&gt;Raspberry Pi Software Guide&lt;/a&gt; 烧录 Micro SD 卡. 把下载好的 &lt;a href=&quot;https://www.raspberrypi.org/downloads/noobs/&quot;&gt;NOOBS for Raspberry Pi&lt;/a&gt; 解压缩然后拷到 SD 卡上. 当然, 也可以直接烧录 Raspbian 到 SD 卡, 这样就不用忍受 NOOBS 安装的漫长时间, 直接插卡就能开机.&lt;/p&gt; &lt;p&gt;插入有线鼠标 (带 USB 发射埠的无线鼠标也可以, 凑活用就好, 之后可以在 Macbook 上使用 SSH 操作), Micro SD 卡, HDMI 线, 网线, Micro USB 电源, 然后就可以安装 Raspbian, 安装完毕后就能进入系统.&lt;/p&gt; &lt;p&gt;进入系统后, 点击左上角 Preferences - Raspberry Pi Configuration, 打开 SSH 和 VNC. 建议在这里顺便更改用户密码.&lt;/p&gt; &lt;p&gt;这时候就可以切回 Macbook, 打开终端 (我使用的是 iTerm2), 输入代码 &lt;code class=&quot;highlighter-rouge&quot;&gt;ssh pi@raspberrypi.local&lt;/code&gt; 然后输入树莓派的密码, 连接树莓派.&lt;/p&gt; &lt;p&gt;&lt;img src=&quot;http://ww2.sinaimg.cn/large/006tNc79gw1fbg76r9rl7j30oa0g1mzm.jpg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt; &lt;p&gt;更具体的操作方法, 请参考官方帮助页面 &lt;a href=&quot;https://www.raspberrypi.org/learning/software-guide/&quot;&gt;Raspberry Pi Software Guide&lt;/a&gt;.&lt;/p&gt; &lt;h2 id=&quot;更换国内镜像源&quot;&gt;更换国内镜像源&lt;/h2&gt; &lt;p&gt;由于国内访问树莓派服务器的不便, 因此需要更换为国内镜像, 这里我将 sources 的镜像更换为速度更快的阿里云, archive.raspberrypi.org 的镜像只找到中科大的, 因此使用了中科大的镜像.&lt;/p&gt; &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;sudo nano /etc/apt/sources.list # 用 # 注释掉原有的 source, 输入阿里云镜像. deb http://mirrors.aliyun.com/raspbian/raspbian/ jessie main non-free contrib deb-src http://mirrors.aliyun.com/raspbian/raspbian/ jessie main non-free contrib &lt;/code&gt;&lt;/pre&gt; &lt;/div&gt; &lt;p&gt;&lt;img src=&quot;http://ww3.sinaimg.cn/large/006tNc79gw1fbg76t6uh7j30oa0g142p.jpg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt; &lt;p&gt;更换中科大镜像的方法一样, 但文件位置及名字不同.&lt;/p&gt; &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;sudo nano /etc/apt/sources.list.d/raspi.list # 注释掉原来的, 输入中科大镜像 deb http://mirrors.ustc.edu.cn/archive.raspberrypi.org/debian/ jessie main ui &lt;/code&gt;&lt;/pre&gt; &lt;/div&gt; &lt;p&gt;&lt;img src=&quot;http://ww4.sinaimg.cn/large/006tNc79gw1fbg76rmtg6j30oa0g1jtv.jpg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt; &lt;p&gt;更换好源后, 输入以下代码就可以不用忍受龟速更新系统了.&lt;/p&gt; &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;sudo apt-get update sudo apt-get upgrade &lt;/code&gt;&lt;/pre&gt; &lt;/div&gt; &lt;h2 id=&quot;安装-nodejs-及相关依赖&quot;&gt;安装 Node.js 及相关依赖&lt;/h2&gt; &lt;p&gt;Homebridge 是一个用 node.js 开发的 HomeKit 服务器, 因此需要参考 &lt;a href=&quot;https://github.com/nfarina/homebridge/wiki/Running-HomeBridge-on-a-Raspberry-Pi&quot;&gt;Running HomeBridge on a Raspberry Pi&lt;/a&gt; 在树莓派上先安装 node.js, 由于国内网络问题, 仍然需要更换镜像.&lt;/p&gt; &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;curl -sL https://deb.nodesource.com/setup_6.x | sudo -E bash - # 更换为国内源 sudo nano /etc/apt/sources.list.d/nodesource.list # 输入清华大学镜像 deb http://mirrors.tuna.tsinghua.edu.cn/nodesource/deb/ jessie main deb-src http://mirrors.tuna.tsinghua.edu.cn/nodesource/deb/ jessie main &lt;/code&gt;&lt;/pre&gt; &lt;/div&gt; &lt;p&gt;这时候就可以安装 node.js 以及其相关依赖了.&lt;/p&gt; &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;sudo apt-get install -y nodejs sudo apt-get install libavahi-compat-libdnssd-dev &lt;/code&gt;&lt;/pre&gt; &lt;/div&gt; &lt;h2 id=&quot;安装-homebridge-及相关依赖&quot;&gt;安装 homebridge 及相关依赖&lt;/h2&gt; &lt;p&gt;Homebridge 属于 node.js 下的模块之一, 这时候需要用到 npm 安装, npm 的速度也是很令人着急, 但好在 npm 可以使用代理, 这里我们使用淘宝镜像下载 homebridge. 本步骤比较繁琐, 依旧参考 &lt;a href=&quot;https://github.com/nfarina/homebridge/wiki/Running-HomeBridge-on-a-Raspberry-Pi&quot;&gt;Running HomeBridge on a Raspberry Pi&lt;/a&gt;.&lt;/p&gt; &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;# 在命令后添加 --registry=http://r.cnpmjs.org 使用国内 npm 镜像代理 sudo npm install -g --unsafe-perm homebridge hap-nodejs node-gyp --registry=http://r.cnpmjs.org cd /usr/lib/node_modules/homebridge/ sudo npm install --unsafe-perm bignum --registry=http://r.cnpmjs.org cd /usr/lib/node_modules/hap-nodejs/node_modules/mdns sudo node-gyp BUILDTYPE=Release rebuild &lt;/code&gt;&lt;/pre&gt; &lt;/div&gt; &lt;p&gt;这时候可以输入 &lt;code class=&quot;highlighter-rouge&quot;&gt;homebridge&lt;/code&gt; 测试能否正常运行 homebridge, 如果一切顺利的话, 能看到 homebridge 一直运行且没有报错, 打开手机的家庭 app 添加配件就能看到 homebridge.&lt;/p&gt; &lt;h2 id=&quot;安装-homebridge-yeelight&quot;&gt;安装 homebridge-yeelight&lt;/h2&gt; &lt;p&gt;记得打开 yeelight 的极客模式, 最新版本 (0.0.1.4) 的 &lt;a href=&quot;https://www.npmjs.com/package/homebridge-yeelight&quot;&gt;homebridge-yeelight&lt;/a&gt; 已经不需要更改 config.json 了, 因此直接输入以下代码就完成了配置, 能在手机里添加台灯了.&lt;/p&gt; &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;sudo npm install -g homebridge-yeelight --registry=http://r.cnpmjs.org homebridge &lt;/code&gt;&lt;/pre&gt; &lt;/div&gt; &lt;h2 id=&quot;开机启动&quot;&gt;开机启动&lt;/h2&gt; &lt;p&gt;&lt;a href=&quot;https://github.com/nfarina/homebridge/wiki/Running-HomeBridge-on-a-Raspberry-Pi&quot;&gt;Running HomeBridge on a Raspberry Pi&lt;/a&gt; 上给出的添加启动项实在是太繁琐了, 我甚至因为这一步没弄明白重新刷了次机, 还顺便搞懂了.bashrc 和 rc.local 有什么区别. 事实上, 树莓派文档 &lt;a href=&quot;https://www.raspberrypi.org/documentation/linux/usage/cron.md&quot;&gt;Scheduling tasks with Cron&lt;/a&gt; 给出的方法是最简单且方便以后配置别的程序的.&lt;/p&gt; &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;# 先安装 cron sudo apt-get install gnome-schedule &lt;/code&gt;&lt;/pre&gt; &lt;/div&gt; &lt;p&gt;然后配置 cron.&lt;/p&gt; &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;crontab -e &lt;/code&gt;&lt;/pre&gt; &lt;/div&gt; &lt;p&gt;在最下方添加 &lt;code class=&quot;highlighter-rouge&quot;&gt;@reboot homebridge &amp;amp;&lt;/code&gt; 即可完成开机启动 homebridge 的配置. 再多嘴一句, cron 这个命令非常好用, 在 system tools 里有 GUI 界面, 还能让树莓派完成每周日运行 &lt;code class=&quot;highlighter-rouge&quot;&gt;sudo apt-get update sudo apt-get update&lt;/code&gt; 这样的定时任务.&lt;/p&gt; &lt;h2 id=&quot;参考资料&quot;&gt;参考资料&lt;/h2&gt; &lt;p&gt;&lt;a href=&quot;https://www.raspberrypi.org/documentation/linux/usage/cron.md&quot;&gt;Scheduling tasks with Cron - Raspberry Pi Documentation (树莓派官方的资料真的非常友好)&lt;/a&gt;&lt;/p&gt; &lt;p&gt;&lt;a href=&quot;https://www.raspberrypi.org/documentation/&quot;&gt;Raspberry Pi Documentation&lt;/a&gt;&lt;/p&gt; &lt;p&gt;&lt;a href=&quot;http://sspai.com/36617&quot;&gt;借助树莓派与HomeBridge，将 YeeLight 彩光灯接入 Apple HomeKit - 少数派&lt;/a&gt;&lt;/p&gt; &lt;p&gt;&lt;a href=&quot;http://bbs.xiaomi.cn/t-13198850&quot;&gt;小米网关接入Homekit完整教程，声控家中设备! - 小米社区官方论坛&lt;/a&gt;&lt;/p&gt; </description><pubDate>Fri, 06 Jan 2017 00:08:00 +0800</pubDate><link>http://localhost:4000/iewaij.github.io/rpi-homekit-yeelight.html</link><guid isPermaLink="true">http://localhost:4000/iewaij.github.io/rpi-homekit-yeelight.html</guid> </item> <item><title>Financial Accounting 概览</title><description>&lt;ul id=&quot;markdown-toc&quot;&gt; &lt;li&gt;&lt;a href=&quot;#为什么我们需要学习-fa&quot; id=&quot;markdown-toc-为什么我们需要学习-fa&quot;&gt;为什么我们需要学习 FA？&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;#examination--module-feedback&quot; id=&quot;markdown-toc-examination--module-feedback&quot;&gt;Examination &amp;amp; Module Feedback&lt;/a&gt; &lt;ul&gt; &lt;li&gt;&lt;a href=&quot;#课程反馈&quot; id=&quot;markdown-toc-课程反馈&quot;&gt;课程反馈&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;#总体得分情况&quot; id=&quot;markdown-toc-总体得分情况&quot;&gt;总体得分情况&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;/li&gt; &lt;li&gt;&lt;a href=&quot;#past-paper&quot; id=&quot;markdown-toc-past-paper&quot;&gt;Past Paper&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;#课程概览&quot; id=&quot;markdown-toc-课程概览&quot;&gt;课程概览&lt;/a&gt; &lt;ul&gt; &lt;li&gt;&lt;a href=&quot;#week-1&quot; id=&quot;markdown-toc-week-1&quot;&gt;Week 1&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;#week-2&quot; id=&quot;markdown-toc-week-2&quot;&gt;Week 2&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;#week-3&quot; id=&quot;markdown-toc-week-3&quot;&gt;Week 3&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;#week-4&quot; id=&quot;markdown-toc-week-4&quot;&gt;Week 4&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;#week-5&quot; id=&quot;markdown-toc-week-5&quot;&gt;Week 5&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;#week-6&quot; id=&quot;markdown-toc-week-6&quot;&gt;Week 6&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;#weeks-7--8&quot; id=&quot;markdown-toc-weeks-7--8&quot;&gt;Weeks 7 &amp;amp; 8&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;#week-9&quot; id=&quot;markdown-toc-week-9&quot;&gt;Week 9&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;#week-10&quot; id=&quot;markdown-toc-week-10&quot;&gt;Week 10&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;/li&gt; &lt;li&gt;&lt;a href=&quot;#connect&quot; id=&quot;markdown-toc-connect&quot;&gt;Connect&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;#whats-next&quot; id=&quot;markdown-toc-whats-next&quot;&gt;What’s Next?&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;#支持我&quot; id=&quot;markdown-toc-支持我&quot;&gt;支持我&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;#联系我&quot; id=&quot;markdown-toc-联系我&quot;&gt;联系我&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;h2 id=&quot;为什么我们需要学习-fa&quot;&gt;为什么我们需要学习 FA？&lt;/h2&gt; &lt;p&gt;我在接触会计这门课之前，觉得会计真的是鸡毛学科，用加减运算不就可以了？但是想象一下，你正在经营一个创业公司：&lt;/p&gt; &lt;ol&gt; &lt;li&gt;你从公司 A 收取了2000块，1500块现金支付，500块在2个月以后支付，现在是年底，要作出一份财务报告，请问你如何处理这500块？&lt;/li&gt; &lt;li&gt;你的投资人向你的公司投资了300万，请问你能不能花这300万里的10块钱买一支牙刷？&lt;/li&gt; &lt;/ol&gt; &lt;p&gt;以上两个问题是远远不能简单用加减运算的，而想要解决这两个问题，就必然需要财务会计的知识。&lt;/p&gt; &lt;p&gt;财务会计这门学科是商业的基本语言，因为它解决了公司应该如何合理、统一地管理钱这个问题。&lt;/p&gt; &lt;p&gt;知乎的这个回答 —— &lt;a href=&quot;http://zhihu.com/question/20688855/answer/99452339&quot;&gt;人们为什么选会计专业？真的有喜欢会计的人吗？&lt;/a&gt; —— 更详细地展示了如何把会计用于解决问题中。&lt;/p&gt; &lt;h2 id=&quot;examination--module-feedback&quot;&gt;Examination &amp;amp; Module Feedback&lt;/h2&gt; &lt;h3 id=&quot;课程反馈&quot;&gt;课程反馈&lt;/h3&gt; &lt;p&gt;在给学生的 feedback 中，对于学生认为课程设置不合理和有不少学生挂科的问题，Andy 一脸无辜地说明了会计学科的特殊性和陡峭的学习曲线，很少去上 lecture 的学生 “must expect not to understand”。挂科的问题难以解决因为挂科学生主要集中在 “the students who do not attend lectures and appear to put in very little effort to master the subject.”&lt;/p&gt; &lt;p&gt;行吧，感觉胸口中了一箭，我就是翘了所有周三的 FA 去旁听 CT 了。&lt;/p&gt; &lt;h3 id=&quot;总体得分情况&quot;&gt;总体得分情况&lt;/h3&gt; &lt;p&gt;选择题部分的平均分为 52.5%，远低于其他部分的 67.5%。接近&lt;strong&gt;八分之一&lt;/strong&gt;的学生挂科。&lt;/p&gt; &lt;p&gt;去年一共有540名学生参加 FA 考试，6人拿了90+，52人拿了80-90， top 10% 拿了 80+，top 30% 拿了 70+，69人挂科，占比13%。&lt;/p&gt; &lt;p&gt;作为对比，1516学年大一上学期的 IBM 共有616人参加考试，没有人拿 90+，仅有13人（2%）拿了80+，top 15% 在 70+，仅有9人（1.4%）挂科。去年的 Work and Society 共有486人参加考试，18人（3%）拿了70+，116人（24%）拿了60-69，46人（9%）挂科。&lt;/p&gt; &lt;p&gt;从以上数据可知， FA 相比其他两门同样包含大量概念的科目（WS 和 IBM），更容易拿高分（70+），但也更容易挂。和我预想不同的是，选择题比大题更容易失分，需要注意。&lt;/p&gt; &lt;h2 id=&quot;past-paper&quot;&gt;Past Paper&lt;/h2&gt; &lt;p&gt;分析前三年的考试试卷，题型基本不变，考试时长2小时，允许携带双行显示计算器和词典。&lt;/p&gt; &lt;p&gt;Section A 是20道选择题，没有答错扣分机制，注意，去年的选择平均得分率仅50%，也就是说错10道才算平均水平。&lt;/p&gt; &lt;p&gt;Section B 就是做报表，50分。&lt;/p&gt; &lt;p&gt;1516年的第一道题，提供 balance sheet 和6条 notes，要求作出一年的 statement of cash flows，20分。第二道题（30分）提供 trial balance 和11条 notes 做出 income statement (14分)，balance sheet (10分) 和 statement of changes in equity（6分）。&lt;/p&gt; &lt;p&gt;1314年、1415年基本和1515年一样，就是做那四个表，题目要求都没变，我很怀疑 Edward 就是把公司的名字和数据换了一下（连续三年了，为什么每个公司都要买摩托车？）。&lt;/p&gt; &lt;p&gt;Section C 是简答题，10分，三选一，解释一些基本的概念，难度不大。&lt;/p&gt; &lt;h2 id=&quot;课程概览&quot;&gt;课程概览&lt;/h2&gt; &lt;p&gt;FA 的概念非常细碎，粗略地分，week 1-6 都在讲如何做出 financial statements，其中前三周是基础，包括 debit，credit，income statement（也叫 statement of profit or loss） 和 trial balance，week 4-6 是细节，包括 accruals，dividends 和 interest；week 7-8 是 statement of cash flows；week 9 是 statements of changes in equity。&lt;/p&gt; &lt;p&gt;以下是我从 Moodle 上找到的更详细地课程概览。&lt;/p&gt; &lt;h3 id=&quot;week-1&quot;&gt;Week 1&lt;/h3&gt; &lt;p&gt;&lt;strong&gt;Chapter 1 Entities and financial reporting statements&lt;/strong&gt;&lt;/p&gt; &lt;p&gt;Probably the book will be issued to you during the first week of lectures, so after that, if you have time, after all the other activities this week, you could read chapter 1. I don’t talk about all the ideas in the chapter at this stage, but it is all relevant background material, and will help you to learn and practice the language of accounting&lt;/p&gt; &lt;h3 id=&quot;week-2&quot;&gt;Week 2&lt;/h3&gt; &lt;p&gt;&lt;strong&gt;Chapter 7 The accounting equation and its components&lt;/strong&gt;&lt;/p&gt; &lt;p&gt;It is not possible to cover all the concepts in the early textbook chapters in the PPTs and lectures, and so it is useful to read up about these in the textbook. If you have time, you could also preview some of chapters 2 and 3 - these are set reading for later in the course, but provide useful background. NOTE On page 130 the book describes sand and timber as inventory items, but then classifies them as capital - they should be revenue because they are goods for resale. The book is incorrect here.&lt;/p&gt; &lt;h3 id=&quot;week-3&quot;&gt;Week 3&lt;/h3&gt; &lt;p&gt;&lt;strong&gt;Chapter 8 Basic documentation and books of account&lt;/strong&gt;&lt;/p&gt; &lt;p&gt;&lt;strong&gt;Chapter 9 Double entry and the general ledger&lt;/strong&gt;&lt;/p&gt; &lt;p&gt;&lt;strong&gt;Chapter 10 The balancing of accounts and the trial balance&lt;/strong&gt;&lt;/p&gt; &lt;p&gt;&lt;strong&gt;Chapter 11 Day books and the journal&lt;/strong&gt;&lt;/p&gt; &lt;h3 id=&quot;week-4&quot;&gt;Week 4&lt;/h3&gt; &lt;p&gt;&lt;strong&gt;Chapter 15 Depreciation and non-current assets&lt;/strong&gt;&lt;/p&gt; &lt;p&gt;&lt;strong&gt;sections 15.1 and 15.2 are probably best left until later in the course&lt;/strong&gt;&lt;/p&gt; &lt;p&gt;&lt;strong&gt;Chapter 16 Irrecoverable receivables and allowance for irrecoverable receivables&lt;/strong&gt;&lt;/p&gt; &lt;p&gt;The chapter used to be called “Bad debts and provisions for bad debts” which was a little easier to understand! The book does not use the term doubtful debts, but the idea is included as part of bad debts.&lt;/p&gt; &lt;p&gt;&lt;strong&gt;Chapter 17 Accruals and prepayments&lt;/strong&gt;&lt;/p&gt; &lt;p&gt;You can leave out section 17.4&lt;/p&gt; &lt;h3 id=&quot;week-5&quot;&gt;Week 5&lt;/h3&gt; &lt;p&gt;&lt;strong&gt;Chapter 12 The cash book&lt;/strong&gt;&lt;/p&gt; &lt;p&gt;&lt;strong&gt;Chapter 21 Errors and suspense accounts&lt;/strong&gt;&lt;/p&gt; &lt;p&gt;&lt;strong&gt;Chapter 14 The final financial statements of sole traders (introductory)&lt;/strong&gt;&lt;/p&gt; &lt;p&gt;On page 230, the statement of comprehensive income is mentioned briefly. we will return to this idea later. The textbook distinguishes between the accounts of sole traders and those of a company. Many aspects are the same, but in fact the section B questions in the exam are always about companies, not sole traders.&lt;/p&gt; &lt;h3 id=&quot;week-6&quot;&gt;Week 6&lt;/h3&gt; &lt;p&gt;&lt;strong&gt;Chapter 18 The extended trial balance and final financial statements (advanced)&lt;/strong&gt;&lt;/p&gt; &lt;p&gt;I will present the extended trial balance in a slightly different way from the book. The textbook does not present the adjustments column in a way that highlights the two sided nature of all adjustments, and you are advised to adopt the format I suggest, where the adjustments columns are totalled and balanced. Pages 570 - 577 (from chapter 29 – week 9) deal with the statement of changes in equity are starting to look at. Some of the contents of this section may only make sense later in the course, when we return to ideas such as comprehensive income and reserves.&lt;/p&gt; &lt;h3 id=&quot;weeks-7--8&quot;&gt;Weeks 7 &amp;amp; 8&lt;/h3&gt; &lt;p&gt;&lt;strong&gt;Chapter 30 Statement of Cash Flows&lt;/strong&gt;&lt;/p&gt; &lt;h3 id=&quot;week-9&quot;&gt;Week 9&lt;/h3&gt; &lt;p&gt;&lt;strong&gt;Chapter 28 The nature of limited companies and their capital&lt;/strong&gt;&lt;/p&gt; &lt;p&gt;This provides a lot of information about the legal background to company structure in the UK&lt;/p&gt; &lt;p&gt;&lt;strong&gt;Chapter 29 The final financial statements of limited companies&lt;/strong&gt;&lt;/p&gt; &lt;p&gt;Items 29.1 - 29.5 are relevant to what we have looked at so far. Some of the items in later sections will be covered in later&lt;/p&gt; &lt;h3 id=&quot;week-10&quot;&gt;Week 10&lt;/h3&gt; &lt;p&gt;&lt;strong&gt;Chapter 2 International financial reporting: institutional framework and standards&lt;/strong&gt;&lt;/p&gt; &lt;p&gt;&lt;strong&gt;Chapter 3 The conceptual framework 1: objectives of financial statements, stakeholders and other reports&lt;/strong&gt;&lt;/p&gt; &lt;p&gt;&lt;strong&gt;Chapter 4 The conceptual framework 2: concepts, principles and policies&lt;/strong&gt;&lt;/p&gt; &lt;p&gt;&lt;strong&gt;Chapter 5 The conceptual framework 3: the qualitative characteristics of financial statements&lt;/strong&gt;&lt;/p&gt; &lt;p&gt;These chapters provide useful general background but detailed mastery of the content is not required.&lt;/p&gt; &lt;p&gt;&lt;strong&gt;Chapter 24 Inventory valuation&lt;/strong&gt; This chapter is generally useful, although please note that you do not need to know in detail about work in progress or the accounts of manufacturing companies for this course.&lt;/p&gt; &lt;h2 id=&quot;connect&quot;&gt;Connect&lt;/h2&gt; &lt;p&gt;Andy 在 Moodle 的 Connect 板块里提供了电子版教科书和练习题，如图所示。 &lt;img src=&quot;http://ww1.sinaimg.cn/large/006tNbRwgw1fawj9blcqej31hc0rbtgh.jpg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt; &lt;p&gt;&lt;img src=&quot;http://ww1.sinaimg.cn/large/006tNbRwgw1fawj9ec2c1j31hc11f7b2.jpg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt; &lt;p&gt;&lt;img src=&quot;http://ww1.sinaimg.cn/large/006tNbRwgw1fawj92e1gtj31hc0rbn7q.jpg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt; &lt;h2 id=&quot;whats-next&quot;&gt;What’s Next?&lt;/h2&gt; &lt;p&gt;因为所有周三的 FA lecture 我都去旁听 Communication and Technology 了，所以我对 FA 目前是一头雾水，我也不知道复习 FA 要按什么顺序，如果有大神愿意交流，欢迎指导。&lt;/p&gt; &lt;p&gt;我现在决定的复习顺序是围绕考试要求的几个报表配合 Andy 给出的 Question Bank 针对性地看教材和其他资料，我不认同按每周顺序看幻灯片的复习方式，有以下几个原因：&lt;/p&gt; &lt;ol&gt; &lt;li&gt;不带着问题看幻灯片是没有效率的。&lt;/li&gt; &lt;li&gt;幻灯片的顺序是上课的顺序而不是复习的顺序。&lt;/li&gt; &lt;li&gt;看幻灯片真的无聊。&lt;/li&gt; &lt;/ol&gt; &lt;p&gt;接下来几天，如果我还活着的话，我会更加细节地给出我的笔记。&lt;/p&gt; &lt;h2 id=&quot;支持我&quot;&gt;支持我&lt;/h2&gt; &lt;p&gt;在我成长的过程中，我受到了太多人的不求回报的帮助，因此我也乐意无偿地分享我的知识，我的所有文章都可以在我的博客（lijiawei.cc）上免费找到。&lt;/p&gt; &lt;p&gt;本作品基于 &lt;a href=&quot;https://creativecommons.org/licenses/by-nc/4.0/&quot;&gt;CC 4.0&lt;/a&gt; 许可，你可以自由分享、演绎，但必须署名，不允许商业性使用。&lt;/p&gt; &lt;p&gt;如果你愿意支持我继续分享排版优雅、免费的知识类文章，请考虑扫描二维码支持我，这样你的时间和金钱可以用于做其他更有意思的事情上。&lt;/p&gt; &lt;p&gt;&lt;img src=&quot;http://ww3.sinaimg.cn/large/006tNbRwgw1fattjmu5lvj30v20kv76l.jpg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt; &lt;h2 id=&quot;联系我&quot;&gt;联系我&lt;/h2&gt; &lt;p&gt;本文系作者班门弄斧之作，如有纰漏，请各位斧正。我的联系方式如下：&lt;/p&gt; &lt;p&gt;微信：lijiawei&lt;/p&gt; &lt;p&gt;博客：lijiawei.cc&lt;/p&gt; &lt;p&gt;邮箱：li.jw@me.com&lt;/p&gt; &lt;p&gt;Github: github.com/iewaij&lt;/p&gt; &lt;form style=&quot;border:1px solid #ccc;padding:3px;text-align:center;&quot; action=&quot;https://tinyletter.com/HackUndergraduate&quot; method=&quot;post&quot; target=&quot;popupwindow&quot; onsubmit=&quot;window.open('https://tinyletter.com/HackUndergraduate', 'popupwindow', 'scrollbars=yes,width=800,height=600');return true&quot;&gt;&lt;p&gt;&lt;label for=&quot;tlemail&quot;&gt;Enter your email address&lt;/label&gt;&lt;/p&gt;&lt;p&gt;&lt;input type=&quot;text&quot; style=&quot;width:140px&quot; name=&quot;email&quot; id=&quot;tlemail&quot; /&gt;&lt;/p&gt;&lt;input type=&quot;hidden&quot; value=&quot;1&quot; name=&quot;embed&quot; /&gt;&lt;input type=&quot;submit&quot; value=&quot;Subscribe&quot; /&gt;&lt;p&gt;&lt;a href=&quot;https://tinyletter.com&quot; target=&quot;_blank&quot;&gt;powered by TinyLetter&lt;/a&gt;&lt;/p&gt;&lt;/form&gt; </description><pubDate>Tue, 20 Dec 2016 12:13:00 +0800</pubDate><link>http://localhost:4000/iewaij.github.io/2016/12/20/Financial-Accounting/</link><guid isPermaLink="true">http://localhost:4000/iewaij.github.io/2016/12/20/Financial-Accounting/</guid> </item> <item><title>期末复习效率指南</title><description>&lt;ul id=&quot;markdown-toc&quot;&gt; &lt;li&gt;&lt;a href=&quot;#指南大纲&quot; id=&quot;markdown-toc-指南大纲&quot;&gt;指南大纲&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;#内在动机驱动&quot; id=&quot;markdown-toc-内在动机驱动&quot;&gt;内在动机驱动&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;#闷声发大财&quot; id=&quot;markdown-toc-闷声发大财&quot;&gt;闷声发大财&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;#执行意图&quot; id=&quot;markdown-toc-执行意图&quot;&gt;执行意图&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;#必要难度&quot; id=&quot;markdown-toc-必要难度&quot;&gt;必要难度&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;#组块化&quot; id=&quot;markdown-toc-组块化&quot;&gt;组块化&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;#如何形成组块&quot; id=&quot;markdown-toc-如何形成组块&quot;&gt;如何形成组块&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;#流程化&quot; id=&quot;markdown-toc-流程化&quot;&gt;流程化&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;#参考资料&quot; id=&quot;markdown-toc-参考资料&quot;&gt;参考资料&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;#支持我&quot; id=&quot;markdown-toc-支持我&quot;&gt;支持我&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;#邮件订阅&quot; id=&quot;markdown-toc-邮件订阅&quot;&gt;邮件订阅&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;这三天研究了认知心理学，并打算将学得用于期末复习，因此有此指南。作为一个读者，目前我看到的学霸复习指南为我提供了不少建议，让我有许多收获，然而这些建议缺少理论支撑，且一般是按照不同学科分类给建议，缺少统一的体系。本指南以开放、开源、共享的黑客精神（请大家感受一下我对卖笔记、打广告这种事情的鄙夷），与各位读者分享、切磋心智技巧，鉴于我个人对心理学的认知还停留在门外汉层面，有许多不完善的地方请各位斧正。&lt;/p&gt; &lt;h2 id=&quot;指南大纲&quot;&gt;指南大纲&lt;/h2&gt; &lt;p&gt;主要分为两块，理论和流程，理论以认知心理学为主，流程是我总结出适用于当前读者的方法论。&lt;/p&gt; &lt;ul&gt; &lt;li&gt;内在动机驱动&lt;/li&gt; &lt;li&gt;闷声发大财&lt;/li&gt; &lt;li&gt;执行意图&lt;/li&gt; &lt;li&gt;必要难度&lt;/li&gt; &lt;li&gt;组块化&lt;/li&gt; &lt;li&gt;如何形成组块&lt;/li&gt; &lt;li&gt;流程化&lt;/li&gt; &lt;li&gt;参考资料&lt;/li&gt; &lt;/ul&gt; &lt;h2 id=&quot;内在动机驱动&quot;&gt;内在动机驱动&lt;/h2&gt; &lt;p&gt;永远保持好奇、永远在探索是自我驱动的唯一动力。&lt;/p&gt; &lt;p&gt;分数、名利和金钱这些外部动机仅仅是对探索结果的反馈。这些东西都是虚无的，拿到了很高的分数、受到了赞扬、赚到了很多钱后，但又能做什么呢？无非就是受到了激励、帮助，然后继续探索。&lt;/p&gt; &lt;p&gt;我个人所秉持的价值观就是黑客精神，黑客的驱动力就是对万物保持强烈的好奇心，想去探索根源，就像探索程序背后的源代码一样。&lt;/p&gt; &lt;p&gt;Y Combinator 的创始人 Paul Graham 写了一本书 &lt;a href=&quot;https://book.douban.com/subject/6021440/&quot;&gt;《黑客与画家》&lt;/a&gt;，讲述了他认知的黑客文化、创业和艺术，推荐想了解黑客的内在动机的读者阅读。&lt;/p&gt; &lt;h2 id=&quot;闷声发大财&quot;&gt;闷声发大财&lt;/h2&gt; &lt;p&gt;参考 &lt;a href=&quot;http://www.ted.com/talks/derek_sivers_keep_your_goals_to_yourself&quot;&gt;Derek Sivers&lt;/a&gt; 的 TED 演讲，心理学研究已经表明，当自己设定目标后，要管住自己的嘴，当我们告诉别人「我要学习编程」的时候，这种告诉别人目标带来的满足感会欺骗自己已经完成了该目标，在我们想分享目标的时候，可以有两种策略，&lt;del&gt;其中第二种策略无形中验证了中国一句古话&lt;/del&gt;：&lt;/p&gt; &lt;ol&gt; &lt;li&gt;说没有满足感的目标，例如，我要开始学习编程，每周编程10小时以上，如果不能完成，我就发100块红包。&lt;/li&gt; &lt;li&gt;把目标完成了之后再说出来，闷声发大财。&lt;/li&gt; &lt;/ol&gt; &lt;h2 id=&quot;执行意图&quot;&gt;执行意图&lt;/h2&gt; &lt;p&gt;阳志平在 &lt;a href=&quot;http://www.yangzhiping.com/psy/YangQ&amp;amp;A-Implementation-intention.html&quot;&gt;行动派&lt;/a&gt; 和 &lt;a href=&quot;http://www.yangzhiping.com/psy/implementation-intentions.html&quot;&gt;执行意图&lt;/a&gt; 中如此阐述执行意图，「执行意图不鼓励模糊抽象的目标，而是鼓励你将目标拆解为具体步骤，用具体的时间地点引发一个动作」 。&lt;/p&gt; &lt;p&gt;明确执行意图，一种方法是使用 if-then。这个策略有点像设定触发器以让心智用最低成本（而不是决策成本）达到行动的目的，例如我可以设定「如果到了早上8点半，我就要起床刷牙」，这样我就不用到了早上8点半开始挣扎自己是不是应该起床（决策）；还可以这样设定：「起床以后，如果我今天高兴，我就去复习10个近期单词，如果我不高兴，我就去看阳志平的博客」。&lt;/p&gt; &lt;p&gt;另一种明确执行意图的方法是 turn-product-into-process。参照 &lt;a href=&quot;https://www.coursera.org/learn/learning-how-to-learn/lecture/wTEpf/surfs-up-process-versus-product&quot;&gt;Learning How to Learn&lt;/a&gt; 的拖延症章节，我们对自己日常任务往往是结果导向的，例如写完 Essay、复习功课，但这些结果往往就导致了我们的拖延，一是因为我们根本无法预测产出所需要的时间，最后往往是临阵磨枪，二是因为结果导向往往让我们很痛苦。因此，我们需要把结果导向的任务转换成过程导向的，例如把「完成效率指南任务」转换成「用2个番茄时间创作效率指南」，把「复习功课」转换成「用4个番茄时间整理 FA 脉络」，这样可以大大减少拖延的情况，也可以方便安排一天的时间。&lt;/p&gt; &lt;h2 id=&quot;必要难度&quot;&gt;必要难度&lt;/h2&gt; &lt;blockquote&gt; &lt;p&gt;人们常通常认为，记得越快，就是学习效果越好。简而言之，存储越容易，提取就会越快。但是近些年，最新实验发现了与常识相反的结论：存储与提取负相关。——阳志平&lt;/p&gt; &lt;/blockquote&gt; &lt;p&gt;心理学理论认为适当地增加自己记忆的难度可以方便日后提取，也就是俗话说的好记性不如烂笔头，这背后包含的种种成因暂不讨论，我猜测是因为增加难度可以让自我更专注、更容易进入心流状态。阳志平在其博客中总结了以下几点可行的必要难度：&lt;/p&gt; &lt;ul&gt; &lt;li&gt;时间难度 不要在课上记笔记，而是把记笔记的时间推迟6小时左右。&lt;/li&gt; &lt;li&gt;地点难度 在不同的地方记忆，在图书馆看的内容，就回宿舍写笔记。&lt;/li&gt; &lt;li&gt;分时难度 把每个学科复习的时间打散，不是我一天要学这门课10小时，而是每天学2小时。&lt;/li&gt; &lt;li&gt;跨界难度 不同学科混在一起复习。&lt;/li&gt; &lt;li&gt;输出难度 想着法儿考验自己让自己运用知识，用费曼学习法、写文章、写博客、亲手实践。&lt;/li&gt; &lt;/ul&gt; &lt;h2 id=&quot;组块化&quot;&gt;组块化&lt;/h2&gt; &lt;p&gt;我们的大脑有两种记忆方式，工作记忆和长时记忆。工作记忆时效短，但容易存储，就像电脑的内存，长时记忆时效长，但不容易存储，如同电脑的硬盘。但我们在复习一个个零散的概念时，有意识地把这些概念联系、组合起来，这就是组块化。组块化占用更少的工作记忆，使得大脑更容易将组块从工作记忆转移到长期记忆中。&lt;/p&gt; &lt;h2 id=&quot;如何形成组块&quot;&gt;如何形成组块&lt;/h2&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;形成总体概览（Big Picture）&lt;/p&gt; &lt;p&gt;组块的形成可以是从上至下的或者从下至上的，有意识地形成总体概览，就是从上至下的过程，它可以帮助我们更容易地发现各个小组块的联系。我们拿到一本书以后，先不要急着开始，而是先看目录，思考整本书在讲什么问题，自己最想知道哪个部分，这样我们在看书的时候，就能大概了解看到的部分在整本书里占的比重，是基础还是废话，是自己需要的还是不需要的，同时也能帮助我们提问，达到驱动自我的目的。以我手边的《设计心理学》为例，第一章日用品心理学是介绍，第二章是行为心理学，人们的行为背后有哪些规律，第三章讲的是记忆，前三章是心理学范畴的；第四章是现实生活中人受到的约束，第五章是人的差错是设计导致的，第六章讲设计思维及流程，这三章是设计领域的，第七章全球化设计，这章是商业。在看目录的时候，我就无意识地对章节进行了大致地分类（组块），组块的同时，我会不由自主地联系它们产生问题，心理学是怎么影响设计的？行为学是不是就对应了设计中 affordance（示能）的概念？设计流程的哪一步对应到心理学？这些问题又驱动我跳转到我感兴趣的章节（从头到尾按顺序看是一件很痛苦的事情），逐渐地驱动我读完这本书。 &lt;img src=&quot;http://ww4.sinaimg.cn/large/006tNbRwgw1fatte25u6hj31hc0u0aep.jpg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;分解概念&lt;/p&gt; &lt;p&gt;在形成总体概览后，我们就可以着手那些细碎的知识点或者章节，要时刻注意把眼前的知识点打散。比如说在《设计心理学》第一章里，可分解出以下的概念：&lt;/p&gt; &lt;p&gt;好设计的特征&lt;/p&gt; &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt; * 可视性 * 易读性 &lt;/code&gt;&lt;/pre&gt; &lt;/div&gt; &lt;p&gt;设计的分类&lt;/p&gt; &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt; * 工业设计 * 交互设计 * 体验设计 * 以人为本的设计 &lt;/code&gt;&lt;/pre&gt; &lt;/div&gt; &lt;p&gt;交互设计的原则&lt;/p&gt; &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt; * 示能 * 意符 * 映射 * 反馈 * 概念模型 &lt;/code&gt;&lt;/pre&gt; &lt;/div&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;联系概念&lt;/p&gt; &lt;p&gt;把打散的概念相互联系，这是一种自下而上的组块化。《设计心理学》中，作者举例告诉我们什么是好的设计（包含可视性和易读性的设计），比较了各个类别的设计的区别，用对话的形式列出了示能和意符的联系，这些是书中已经有的联系。&lt;/p&gt; &lt;p&gt;我们头脑中已有知识也可以和这些概念发生联系，例如示能的概念我会联想到原研哉在《设计中的设计》里深泽直人设计的伞架，在地上挖了个孔眼，直截了当地说明了这个孔眼可用来插伞，这是示能在室内设计中的体现；同样的，为什么《写给大家看的设计书》里强调文本对齐的重要性？因为对齐也是一种示能。&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;概念模型化&lt;/p&gt; &lt;p&gt;&lt;img src=&quot;http://ww1.sinaimg.cn/large/006tNbRwgw1fattgw2ktzj30go0d075o.jpg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt; &lt;p&gt;把脑中的概念联系在一起后，继续抽象成模型，我在高中的时候无意中有想到几个抽象模型，能量守恒、动量守恒、牛顿第一定律（物体在没有外力的情况下保持匀速运动）、酸碱中和反应可以总结为物质世界的均衡模型（物质世界倾向于朝无运动的方向发展）。&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;模型连通&lt;/p&gt; &lt;p&gt;模型和模型之间当然可以连通，我刚刚提到的物质世界均衡模型其实很类似经济学中的均衡（事实上均衡正是阿尔弗雷德·马歇尔从物理学引入的），所以我头脑中的经济学供需模型其实和物质世界的均衡模型打通了，当然，这时候还能引入博弈论的纳什均衡，这就又抽象为人类活动及物质的均衡模型。这种跨学科的思维模型非常重要，可以参考芒格写的 &lt;a href=&quot;https://book.douban.com/subject/5346110/&quot;&gt; 《穷查理宝典》&lt;/a&gt;。&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;刻意练习&lt;/p&gt; &lt;p&gt;人的时间那么宝贵，练习时间必然要花在刀刃上。高三的时候的复习，就是来来回回地翻教材，翻的都是自己知道的东西，其实这是最最低效的方法（我到现在也无法理解为什么学校要浪费我这么多时间）。刻意练习就是只练习困难的部分，能有效地防止我们有完成幻觉（illusion of competence），我们看完两页书以后，常会不由自主地赞美自己用功复习，然而实际上我们还是没有理解这些概念，只有用课后练习、费曼学习法、写作等方法测试自己哪里没有学到位才能帮助我们检验、内化知识。&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;h2 id=&quot;流程化&quot;&gt;流程化&lt;/h2&gt; &lt;p&gt;流程化就是让理论和方法落地和打包的过程，这里给出我自己整理出的大致流程。这里以我认为世界上最无聊的学科 Financial Accounting 为例。&lt;/p&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;探索学科以达到自我驱动&lt;/p&gt; &lt;p&gt;为了打起所甚无几的对 Accounting 的兴趣，先去知乎搜索一下，发现了这个不错的问题：&lt;a href=&quot;https://www.zhihu.com/question/20688855&quot;&gt;人们为什么选会计专业？真的有喜欢会计的人吗？&lt;/a&gt;&lt;/p&gt; &lt;p&gt;我又从 TED 的 &lt;a href=&quot;http://www.ted.com/topics/finance&quot;&gt;Finance&lt;/a&gt; 话题下找了一个有趣的演讲：&lt;a href=&quot;http://www.ted.com/talks/william_black_how_to_rob_a_bank_from_the_inside_that_is&quot;&gt;William Black: How to rob a bank (from the inside, that is)&lt;/a&gt;&lt;/p&gt; &lt;p&gt;最后我在 YC 创业课上找了这个： &lt;a href=&quot;http://startupclass.club/steps/18&quot;&gt;法律与财务基础 - YC创业课&lt;/a&gt;，这些资料我意识到财务是创立和了解一家公司的基础，好的，我似乎有那么一点点兴趣了。&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;用 WOOP 方法达到自我约束&lt;/p&gt; &lt;p&gt;Wish（期望）：了解财务会计的基本概念并能熟练运用。&lt;/p&gt; &lt;p&gt;Outcome（最理想的结果）：能独立完成 Past Exam 中的财务报表，能正确回答课本的问题。&lt;/p&gt; &lt;p&gt;Obstacle（最可能阻碍计划完成的因素有哪些）：对财务没有任何兴趣&lt;/p&gt; &lt;p&gt;Plan（执行意图）：如果我抱怨财务会计无聊，就去研究一家上市公司的财务报表。每天至少花6个番茄时间用于梳理财务会计的概念，4个番茄时间用于刻意练习财务会计。&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;组块化&lt;/p&gt; &lt;p&gt;看了一下 Module Outline，可以发现 FA 的概念极为零碎，但又基本在两个报表之下：Balance Sheet（第三周到第六周），Cash Flow Statements（第七周到第九周）。头尾三周介绍的主要是琐碎的概念。&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;设定必要难度、刻意练习&lt;/p&gt; &lt;p&gt;分时复习：每天只复习6个番茄时间，而不是一天看完。&lt;/p&gt; &lt;p&gt;跨学科复习：6个番茄时间在上下午完成，空闲时间用于复习其他学科。&lt;/p&gt; &lt;p&gt;刻意练习：看完教科书的章节后6小时做练习、每天晚上抽时间写会计笔记。&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;h2 id=&quot;参考资料&quot;&gt;参考资料&lt;/h2&gt; &lt;p&gt;&lt;a href=&quot;http://www.yangzhiping.com/psy/openmintalk.html&quot;&gt;读书与心智 - 阳志平的网志&lt;/a&gt;&lt;/p&gt; &lt;p&gt;&lt;a href=&quot;http://www.yangzhiping.com/psy/live002.yangtalk.html&quot;&gt;读书十二问 - 阳志平的网志&lt;/a&gt;&lt;/p&gt; &lt;p&gt;&lt;a href=&quot;http://www.yangzhiping.com/psy/YangQ&amp;amp;A-Implementation-intention.html&quot;&gt;行动派 - 阳志平的网志&lt;/a&gt;&lt;/p&gt; &lt;p&gt;&lt;a href=&quot;http://www.yangzhiping.com/psy/implementation-intentions.html&quot;&gt;心智工具箱（4）：执行意图 - 阳志平的网志&lt;/a&gt;&lt;/p&gt; &lt;p&gt;&lt;a href=&quot;http://www.yangzhiping.com/psy/reading-2015.html&quot;&gt;冷读热读：读书九问 - 阳志平的网志&lt;/a&gt;&lt;/p&gt; &lt;p&gt;&lt;a href=&quot;http://www.yangzhiping.com/psy/YangQ&amp;amp;A-SelfDetermination.html&quot;&gt;如何成为内在动机驱使的人？ - 阳志平的网志&lt;/a&gt;&lt;/p&gt; &lt;p&gt;&lt;a href=&quot;https://www.coursera.org/learn/learning-how-to-learn/home/week/2&quot;&gt;Coursera - Learning How to Learn Week 2&lt;/a&gt;&lt;/p&gt; &lt;p&gt;&lt;a href=&quot;https://zhuanlan.zhihu.com/p/22574669?refer=hackyourself&quot;&gt;重启学习系统，做个知识炼金术士&lt;/a&gt;&lt;/p&gt; &lt;p&gt;&lt;a href=&quot;https://zhuanlan.zhihu.com/p/22647481?refer=hackyourself&quot;&gt;知识炼金术士行动指南 1.0&lt;/a&gt;&lt;/p&gt; &lt;h2 id=&quot;支持我&quot;&gt;支持我&lt;/h2&gt; &lt;p&gt;在之后的几天，我会以我人生最大的难关——复习 Financial Accounting——为范例，给出我复习 FA 的具体的笔记（我认为我到死都不会忘记被 FA 支配的恐惧）。如果反馈良好，我会着手 Work and Society 等其他学科的笔记。&lt;/p&gt; &lt;p&gt;如果你非常愿意&lt;strong&gt;无回报&lt;/strong&gt;地支持我，微信扫码捐助，金额随意。 &lt;img src=&quot;http://ww3.sinaimg.cn/large/006tNbRwgw1fattjmu5lvj30v20kv76l.jpg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt; &lt;h2 id=&quot;邮件订阅&quot;&gt;邮件订阅&lt;/h2&gt; &lt;p&gt;本文系 HackUndergraduate 系列的文章，如果你希望第一时间使用邮箱获得 HackUndergraduate 系列新文章，在下方输入你的邮箱地址即可。&lt;/p&gt; &lt;form style=&quot;border:1px solid #ccc;padding:3px;text-align:center;&quot; action=&quot;https://tinyletter.com/HackUndergraduate&quot; method=&quot;post&quot; target=&quot;popupwindow&quot; onsubmit=&quot;window.open('https://tinyletter.com/HackUndergraduate', 'popupwindow', 'scrollbars=yes,width=800,height=600');return true&quot;&gt;&lt;p&gt;&lt;label for=&quot;tlemail&quot;&gt;Enter your email address&lt;/label&gt;&lt;/p&gt;&lt;p&gt;&lt;input type=&quot;text&quot; style=&quot;width:140px&quot; name=&quot;email&quot; id=&quot;tlemail&quot; /&gt;&lt;/p&gt;&lt;input type=&quot;hidden&quot; value=&quot;1&quot; name=&quot;embed&quot; /&gt;&lt;input type=&quot;submit&quot; value=&quot;Subscribe&quot; /&gt;&lt;p&gt;&lt;a href=&quot;https://tinyletter.com&quot; target=&quot;_blank&quot;&gt;powered by TinyLetter&lt;/a&gt;&lt;/p&gt;&lt;/form&gt; </description><pubDate>Sat, 17 Dec 2016 15:31:00 +0800</pubDate><link>http://localhost:4000/iewaij.github.io/2016/12/17/end-term-gateway/</link><guid isPermaLink="true">http://localhost:4000/iewaij.github.io/2016/12/17/end-term-gateway/</guid> </item> <item><title>我2016年的习得与利器</title><description>&lt;ul id=&quot;markdown-toc&quot;&gt; &lt;li&gt;&lt;a href=&quot;#碎片知识&quot; id=&quot;markdown-toc-碎片知识&quot;&gt;碎片知识&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;#学习&quot; id=&quot;markdown-toc-学习&quot;&gt;学习&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;#娱乐&quot; id=&quot;markdown-toc-娱乐&quot;&gt;娱乐&lt;/a&gt; &lt;ul&gt; &lt;li&gt;&lt;a href=&quot;#电影&quot; id=&quot;markdown-toc-电影&quot;&gt;电影&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;#音乐&quot; id=&quot;markdown-toc-音乐&quot;&gt;音乐&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;#游戏&quot; id=&quot;markdown-toc-游戏&quot;&gt;游戏&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;/li&gt; &lt;li&gt;&lt;a href=&quot;#知识文献管理&quot; id=&quot;markdown-toc-知识文献管理&quot;&gt;知识（文献）管理&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;#写作&quot; id=&quot;markdown-toc-写作&quot;&gt;写作&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;#发布&quot; id=&quot;markdown-toc-发布&quot;&gt;发布&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;h2 id=&quot;碎片知识&quot;&gt;碎片知识&lt;/h2&gt; &lt;p&gt;改掉了用稍后读（Pocket）然后再也不读的习惯，先大量读并注意用非常快速地方式标记（例如知乎的点赞），然后用6小时回顾法和卡片法增加记忆难度。&lt;/p&gt; &lt;p&gt;关于6小时回顾法和卡片法，请参考&lt;a href=&quot;http://www.yangzhiping.com/psy/live002.yangtalk.html&quot;&gt;读书十二问&lt;/a&gt;。&lt;/p&gt; &lt;ul&gt; &lt;li&gt;&lt;a href=&quot;https://www.zhihu.com/&quot;&gt;知乎&lt;/a&gt; 依然是我知识输入的主力。&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;http://sspai.com/&quot;&gt;少数派&lt;/a&gt; 依然是我 Mac 和 iOS 上工具使用的输入主力。&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;http://liqi.io/&quot;&gt;利器&lt;/a&gt;通过采访各领域的创造者并获知他（她）们背后的工具，是我今年剁手的主要来源。&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;https://the-offline.com/&quot;&gt;OFFLINE&lt;/a&gt;，性感的科技文化网站。&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;http://www.yangzhiping.com/&quot;&gt;阳志平的博客&lt;/a&gt; 对我彻底打开了认知科学的大门，之前在 Coursera 的对认知科学的学习仍然是一知半解，但 &lt;a href=&quot;http://www.yangzhiping.com/&quot;&gt;阳志平的博客&lt;/a&gt; 的介绍极接地气和系统。&lt;/li&gt; &lt;li&gt;Reeder 用于 RSS 订阅。 &lt;img src=&quot;http://ww3.sinaimg.cn/large/006y8lVagw1faq83vgtnej31hc0u00yg.jpg&quot; alt=&quot;&quot; /&gt;&lt;/li&gt; &lt;li&gt;PDF Expert 用于 PDF 批注。&lt;/li&gt; &lt;li&gt;Alfred 用于搜索、启动应用和一些简单脚本，例如开启 Aria2、查找豆瓣评分、知乎搜索。&lt;/li&gt; &lt;/ul&gt; &lt;h2 id=&quot;学习&quot;&gt;学习&lt;/h2&gt; &lt;ul&gt; &lt;li&gt;&lt;a href=&quot;http://coursera.com/&quot;&gt;Coursera&lt;/a&gt;， &lt;a href=&quot;https://classroom.udacity.com/me&quot;&gt;Udacity&lt;/a&gt; 和 &lt;a href=&quot;https://courses.edx.org/dashboard&quot;&gt;edX&lt;/a&gt; 是我系统学习输入的主力，暑假拿了两张证书，完成了 Python 和单变量微积分的学习，接触了很多经济学、认知科学、计算机科学的知识&lt;del&gt;（然而并没有完成）&lt;/del&gt;。&lt;/li&gt; &lt;li&gt;Kindle 依然占我阅读的大头，依然觉得自己一无所知，今年包了 Kindle Unlimited。我喜欢把 Kindle 用于&lt;strong&gt;不需要精读&lt;/strong&gt;的内容，今年非虚构类主要大量接触了创业、产品管理、项目管理、自我驱动、设计、哲学方面的知识，虚构类最爱的是火星救援、月亮和六便士、人间失格。&lt;/li&gt; &lt;/ul&gt; &lt;h2 id=&quot;娱乐&quot;&gt;娱乐&lt;/h2&gt; &lt;h3 id=&quot;电影&quot;&gt;电影&lt;/h3&gt; &lt;p&gt;你的名字、神奇动物在哪里、比利林恩的中场战事、独立游戏大电影、路边野餐是我 2016 年 TOP 5。&lt;/p&gt; &lt;p&gt;二刷的有你的名字、美人鱼、功夫熊猫3（春节实在太无聊了)。&lt;/p&gt; &lt;p&gt;今年还去了上海电影节，塔科夫斯基的电影实在太难看懂了。&lt;/p&gt; &lt;h3 id=&quot;音乐&quot;&gt;音乐&lt;/h3&gt; &lt;ul&gt; &lt;li&gt;口味基本没怎么变，今年最爱的乐队是 Chinese Football 和草东没有派对。&lt;/li&gt; &lt;li&gt;两场音乐节南京森林和宁波草莓，三场 Livehouse，大波浪、MONO、肆囍。下一次 Livehouse 就是明年的大象体操了。&lt;/li&gt; &lt;/ul&gt; &lt;h3 id=&quot;游戏&quot;&gt;游戏&lt;/h3&gt; &lt;p&gt;没时间打游戏了，今年通了神秘海域4，半途而废的有 Braid、Inside以及其他好多没印象的。&lt;/p&gt; &lt;h2 id=&quot;知识文献管理&quot;&gt;知识（文献）管理&lt;/h2&gt; &lt;p&gt;要用的知识太多，随手收藏的知识容易忘，放文件夹里缺少标签和标记，word 里插 citation 是车祸现场，所以今年开始使用知识和文献管理。&lt;/p&gt; &lt;ul&gt; &lt;li&gt;Endnote，因为学校电脑里有 Endnote，所以写论文时的文献管理的主力还是 Endnote，我把 Endnote Library 放到学校邮箱的 OneDrive 上，基本上在机房写作的工作流就是登录 Chrome、登录邮箱、打开 Endnote、开始写作。&lt;/li&gt; &lt;li&gt;Zotero，我的主力知识管理软件，Endnote 太大了，还收费，我的 Zotero 用于保存我会时不时查找和翻阅的知识，如图所示，效果拔群。 &lt;img src=&quot;http://ww1.sinaimg.cn/large/006y8lVagw1faq82jb1caj31hc0u0dm3.jpg&quot; alt=&quot;&quot; /&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;https://trello.com&quot;&gt;Trello&lt;/a&gt;，项目管理、项目 wiki 都放 Trello 上，太好用了，人类的希望。 &lt;img src=&quot;http://ww4.sinaimg.cn/large/006y8lVagw1faq7eby84tj31hc0u013w.jpg&quot; alt=&quot;&quot; /&gt;&lt;/li&gt; &lt;/ul&gt; &lt;h2 id=&quot;写作&quot;&gt;写作&lt;/h2&gt; &lt;ul&gt; &lt;li&gt;&lt;a href=&quot;http://www.bear-writer.com/&quot;&gt;Bear (Notes for iPhone, iPad and Mac)&lt;/a&gt;，我尝试过无数的写作工具，包括 Ulysses，Mou，Typora 等等等，在今年大部分时间我都是使用 Dayone 2 写作，直到我用了 Bear。写作工具这东西确实比较私人，我是觉得一定要不断地找才能找的到。&lt;/li&gt; &lt;li&gt;Trello，卡片式写作。&lt;/li&gt; &lt;li&gt;石墨文档，用于团队文档的协作。&lt;/li&gt; &lt;/ul&gt; &lt;h2 id=&quot;发布&quot;&gt;发布&lt;/h2&gt; &lt;ul&gt; &lt;li&gt;对朋友圈有洁癖，不想打扰人，所以朋友圈只发真正有价值的东西。&lt;/li&gt; &lt;li&gt;学了 Python，然后用 Python、Pelican、腾讯云服务器搭了自己的博客（博客才让自己有地主的感觉）。&lt;/li&gt; &lt;/ul&gt; </description><pubDate>Wed, 14 Dec 2016 12:41:00 +0800</pubDate><link>http://localhost:4000/iewaij.github.io/2016/12/14/my-2016/</link><guid isPermaLink="true">http://localhost:4000/iewaij.github.io/2016/12/14/my-2016/</guid> </item> <item><title>卡片式写作</title><description>&lt;ul id=&quot;markdown-toc&quot;&gt; &lt;li&gt;&lt;a href=&quot;#我为何写此文&quot; id=&quot;markdown-toc-我为何写此文&quot;&gt;我为何写此文？&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;#基本流程&quot; id=&quot;markdown-toc-基本流程&quot;&gt;基本流程&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;#卡片信息化&quot; id=&quot;markdown-toc-卡片信息化&quot;&gt;卡片信息化&lt;/a&gt; &lt;ul&gt; &lt;li&gt;&lt;a href=&quot;#工具与环境&quot; id=&quot;markdown-toc-工具与环境&quot;&gt;工具与环境&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;#信息化流程&quot; id=&quot;markdown-toc-信息化流程&quot;&gt;信息化流程&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;/li&gt; &lt;li&gt;&lt;a href=&quot;#背后原理组块化&quot; id=&quot;markdown-toc-背后原理组块化&quot;&gt;背后原理：组块化&lt;/a&gt; &lt;ul&gt; &lt;li&gt;&lt;a href=&quot;#必要难度&quot; id=&quot;markdown-toc-必要难度&quot;&gt;必要难度&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;#抽象层级分解&quot; id=&quot;markdown-toc-抽象层级分解&quot;&gt;抽象层级分解&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;/li&gt; &lt;li&gt;&lt;a href=&quot;#卡片式写作的缺点&quot; id=&quot;markdown-toc-卡片式写作的缺点&quot;&gt;卡片式写作的缺点&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;#参考资料&quot; id=&quot;markdown-toc-参考资料&quot;&gt;参考资料&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;h2 id=&quot;我为何写此文&quot;&gt;我为何写此文？&lt;/h2&gt; &lt;p&gt;纳博科夫，一位科学家、文学家、极客，他创造的独特的卡片式写作法，用卡片的形式代替传统的一本道写作，我在第一次接触后大为震撼，此文章就是我第一次使用卡片式写作法写就，耗时 4 小时左右，从来没感觉写作可以这么酣畅淋漓。下图就是我使用写作软件的截图。&lt;/p&gt; &lt;p&gt;&lt;img src=&quot;http://ww2.sinaimg.cn/large/006y8lVagw1faqnc4mfp7j31hc0u07el.jpg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt; &lt;p&gt;卡片式写作法概况起来有以下好处：&lt;/p&gt; &lt;ul&gt; &lt;li&gt;资料收集，帮助记忆。&lt;/li&gt; &lt;li&gt;快速写作，构思先行。&lt;/li&gt; &lt;li&gt;减少畏惧，力注卡片。&lt;/li&gt; &lt;li&gt;远距联想，卡片交互，新思迸发。&lt;/li&gt; &lt;li&gt;组块思维，理顺逻辑。&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;在此文中，我主要查阅了一下两篇文章，此文算是笔记加上我自己的补充，我强烈推荐各位读读这两篇原文：&lt;/p&gt; &lt;p&gt;&lt;a href=&quot;https://site.douban.com/210084/widget/notes/13276908/note/488643066/&quot;&gt;阳志平 - 纳博科夫的卡片&lt;/a&gt;&lt;/p&gt; &lt;p&gt;&lt;a href=&quot;http://www.cnfeat.com/blog/2016/11/20/NabokovWriteStyle/&quot;&gt;像纳博科夫一样写作：卡片创作法&lt;/a&gt;&lt;/p&gt; &lt;h2 id=&quot;基本流程&quot;&gt;基本流程&lt;/h2&gt; &lt;ul&gt; &lt;li&gt;准备好卡片创作工具&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;可以去淘宝上买索引纸和铅笔，但对我来说，电脑是最好的写作工具，我会再补充我如何使用电子设备进行卡片式写作。&lt;/p&gt; &lt;ul&gt; &lt;li&gt;撰写大纲&lt;/li&gt; &lt;/ul&gt; &lt;blockquote&gt; &lt;p&gt;作品的构思先于作品本身。就像玩字谜游戏，我随意在空白处填写。我在卡片上写下这些段落，直到完成整部小说。——纳博科夫&lt;/p&gt; &lt;/blockquote&gt; &lt;p&gt;卡片可分为两种，大纲卡和拓展卡。卡片创作的第一步就是创作大纲卡，在写大纲卡时，思考以下这三个问题：为什么要写?读者是谁？预期结果是什么？&lt;/p&gt; &lt;ul&gt; &lt;li&gt;拓展要点&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;注意在拓展卡中使用湿货。&lt;/p&gt; &lt;ul&gt; &lt;li&gt;编辑成文&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;拓展卡完成后，再将各个拓展卡拼接起来，纯拼接不难，拼接得好看就需要能力，这种拼接的能力就是远距联想能力。&lt;/p&gt; &lt;ul&gt; &lt;li&gt;检查修改&lt;/li&gt; &lt;/ul&gt; &lt;h2 id=&quot;卡片信息化&quot;&gt;卡片信息化&lt;/h2&gt; &lt;p&gt;我不是特别喜欢纸笔，易丢，不好保存，不方便更改，20世纪的纳博科夫是使用索引卡和铅笔撰写作品的，而我目前正在探索我的卡片式写作的信息化流程。&lt;/p&gt; &lt;h3 id=&quot;工具与环境&quot;&gt;工具与环境&lt;/h3&gt; &lt;p&gt;目前我使用的写作工具和环境如下：&lt;/p&gt; &lt;ul&gt; &lt;li&gt;写作软件，Bear。出色的设计和跨平台性能，虽然目前有几点小瑕疵，但已经能很好地达到我的要求。&lt;/li&gt; &lt;li&gt;写作软件，Trello。Trello 既是一个项目协作软件，也是个出色的卡片面板，虽然现在的写作主力不是 Trello，但 Trello 面板更容易让我看到全局，这是 Bear 比不上的。&lt;/li&gt; &lt;li&gt;知识管理软件，Zotero。收集资料里能浏览器里一键放入资料库，我在收集、阅读一部分资料后也会在 Zotero 中写一句话总结。&lt;/li&gt; &lt;li&gt;写作硬件，Macbook Pro+外接显示器+蓝牙键盘+ iPhone。Macbook Pro 是我的写作主力，即便现在 iOS 的生产力已经不错，但电脑的大屏幕依然给我相当的安全感，iPhone 的便携性可以帮助我捕捉灵感，随时写一点东西。&lt;/li&gt; &lt;li&gt;大部分时间，我都在宿舍里写作。&lt;/li&gt; &lt;/ul&gt; &lt;h3 id=&quot;信息化流程&quot;&gt;信息化流程&lt;/h3&gt; &lt;ul&gt; &lt;li&gt;浏览资料，有时候该步骤可以跳过。主要是通过互联网，比较好的资料就收藏进 Zotero 中。&lt;/li&gt; &lt;li&gt;有大致概念后，开始撰写大纲（大纲卡）。&lt;/li&gt; &lt;li&gt;按照大纲，在 Bear 中创建含标题的笔记（拓展卡），并打上标签，方便识别层级顺序。&lt;/li&gt; &lt;li&gt;不断捕捉灵感，在写作时总是发现大纲中可能没有的东西，这些灵感会继续转换成新的笔记或者是一篇新文章。&lt;/li&gt; &lt;li&gt;拓展卡基本写满后，寻找各个笔记间的联系，并通过 Bear 的跳转功能插入到笔记中。&lt;/li&gt; &lt;li&gt;整理，修改，发布。&lt;/li&gt; &lt;/ul&gt; &lt;h2 id=&quot;背后原理组块化&quot;&gt;背后原理：组块化&lt;/h2&gt; &lt;p&gt;当我们只看一个概念时，我们肯定是毫无头绪的，但是当我们专注地（而不是发散地）把相关的概念一一梳理，把所有概念整理成一个整体，也即是组块时，我们的大脑会更加适应也更容易处理。卡片式写作恰好顺应了这个过程。&lt;/p&gt; &lt;h3 id=&quot;必要难度&quot;&gt;必要难度&lt;/h3&gt; &lt;blockquote&gt; &lt;p&gt;人们常通常认为，记得越快，就是学习效果越好。简而言之，存储越容易，提取就会越快。但是近些年，最新实验发现了与常识相反的结论：存储与提取负相关。&lt;/p&gt; &lt;p&gt;也就是说，存入记忆容易，提取出来会不容易；反之，如果你有些吃力地存入，那么，提取会更牢。比如，我们的常识是要在课堂上记笔记。但是必要难度原理建议，别在课堂上记笔记，老师边讲边记笔记，你会听得太明白，写入太容易，但是大脑那块硬盘未来会不易提取出来。过些日子，多数遗忘。反之，如果我们略微增加一下写入难度，比如晚上回到宿舍或者第二天再写笔记，这样未来提取会更容易。也就是，你有些困难地存入，会记得更好并真正学会。——阳志平&lt;/p&gt; &lt;/blockquote&gt; &lt;p&gt;必要难度可以视作组块理论的记忆运用，当我们使用容易的方式记忆时（分神、多任务等等），我们获得的概念并没有被大脑专注地处理，也因此无法形成相应的组块。相比于拍照、复制粘贴，卡片式写作要求我们用更大的难度收集、记录资料，这会使我们更容易记忆。阳志平的原文里给出了钱鐘书的例子，值得一看。&lt;/p&gt; &lt;h3 id=&quot;抽象层级分解&quot;&gt;抽象层级分解&lt;/h3&gt; &lt;p&gt;根据组块理论，我们的大脑更喜欢「把一些有关联的东西加以分类或加工使之成为一个组块」，因此我们做任务、解决问题时倾向于把任务、问题层层分解，使之变成一个个空白的组块再向这些组块里填充内容。我们的大脑也更适应处理同一抽象层级的事情，即写大纲时专注于文章构思，写拓展时更关注于某一张卡片上的内容。卡片式做法顺应了这方法，当我们把注意力集中在一张张卡片上时，干扰因素更少，更专注于填充该卡片的组块，并且创意密度会更大。我个人经验里，卡片式写作减少了我的写作恐惧，我更愿意舒舒服服地写几百字，而不是一下子就写满几页，并且当我看到我已经写了这么多字的时候，我会自我安慰「看我都写了这么多字了，应该差不多了吧」。&lt;/p&gt; &lt;h1 id=&quot;卡片式写作的缺点&quot;&gt;卡片式写作的缺点&lt;/h1&gt; &lt;ul&gt; &lt;li&gt;组块与组块之间的联系不够，需要后期润色加工。&lt;/li&gt; &lt;li&gt;需要极强的联想能力，为什么这个卡片可以和那个卡片联系？然而思考这个问题的时候，作者处于极度疲惫的状态。&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;我认为卡片式写作应该多放几天再发布，因为不是一本道式酣畅淋漓地写就，因此修改需要大量的时间。&lt;/p&gt; &lt;h1 id=&quot;参考资料&quot;&gt;参考资料&lt;/h1&gt; &lt;p&gt;&lt;a href=&quot;https://site.douban.com/210084/widget/notes/13276908/note/488643066/&quot;&gt;阳志平 - 纳博科夫的卡片&lt;/a&gt;&lt;/p&gt; &lt;p&gt;&lt;a href=&quot;http://www.cnfeat.com/blog/2016/11/20/NabokovWriteStyle/&quot;&gt;陈素封 - 像纳博科夫一样写作：卡片创作法&lt;/a&gt;&lt;/p&gt; &lt;p&gt;&lt;a href=&quot;https://zhuanlan.zhihu.com/p/19879632&quot;&gt;采铜 - 思维运筹学导论（实践篇 · 组块化 · 上） - 开放的智力&lt;/a&gt;&lt;/p&gt; &lt;p&gt;&lt;a href=&quot;https://zhuanlan.zhihu.com/p/19882157&quot;&gt;采铜 - 思维运筹学导论（实践篇 · 组块化 · 下） - 开放的智力&lt;/a&gt;&lt;/p&gt; &lt;p&gt;&lt;a href=&quot;https://www.coursera.org/learn/learning-how-to-learn/home/week/2&quot;&gt;Coursera - Learning How to Learn Week 2&lt;/a&gt;&lt;/p&gt; </description><pubDate>Wed, 14 Dec 2016 00:00:00 +0800</pubDate><link>http://localhost:4000/iewaij.github.io/2016/12/14/card-writing/</link><guid isPermaLink="true">http://localhost:4000/iewaij.github.io/2016/12/14/card-writing/</guid> </item> </channel> </rss>
